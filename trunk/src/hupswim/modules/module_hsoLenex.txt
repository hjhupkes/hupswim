Option Compare Database
Option Explicit


Private Function analyzeEstafsCreateTable(tbName As String, ByVal blAddInsTdOpts As Boolean) As Boolean
On Error GoTo fout
analyzeEstafsCreateTable = False

Dim tbDef As TableDef
Dim mydb As Database
Set mydb = CurrentDb()

DoCmd.DeleteObject acTable, tbName

Set tbDef = mydb.CreateTableDef
tbDef.Fields.Append tbDef.CreateField("EST_Wedstrijdnummer", dbLong)
tbDef.Fields.Append tbDef.CreateField("EST_Programmanummer", dbText, 20)
tbDef.Fields.Append tbDef.CreateField("EST_Estafettenummer", dbInteger)
tbDef.Fields.Append tbDef.CreateField("EST_Vereniging", dbText, 50)


If (blAddInsTdOpts) Then
  tbDef.Fields.Append tbDef.CreateField("EST_INS_SumIndTimes", dbDouble)
  tbDef.Fields.Append tbDef.CreateField("EST_INS_UseExtInsTime", dbBoolean)
  tbDef.Fields.Append tbDef.CreateField("EST_INS_ExtInsTime", dbDouble)
  tbDef.Fields.Append tbDef.CreateField("EST_INS_ExtInsWedNr", dbLong)
End If


'feb 2007 addition
tbDef.Fields.Append tbDef.CreateField("EST_ActDepotnummer", dbText, 15)
tbDef.Fields.Append tbDef.CreateField("EST_ActVereniging", dbText, 50)

tbDef.Fields.Append tbDef.CreateField("EST_Inschrijftijd", dbDouble)

tbDef.Fields.Append tbDef.CreateField("EST_BaanInschrijftijd", dbInteger)

tbDef.Fields.Append tbDef.CreateField("EST_UseExtInsTime", dbBoolean)
tbDef.Fields.Append tbDef.CreateField("EST_ExtInsWedNr", dbLong)


tbDef.Fields.Append tbDef.CreateField("EST_Valid", dbBoolean)
'tbDef.Fields.Append tbDef.CreateField("EST_Startzwemmer", dbText, 12)
tbDef.Fields.Append tbDef.CreateField("EST_IsReserve", dbBoolean)
tbDef.Fields.Append tbDef.CreateField("EST_InvalidReason", dbText, 255)
tbDef.Fields.Append tbDef.CreateField("EST_Categorie", dbText, 20)


tbDef.Fields.Append tbDef.CreateField("EST_ProgCategorie", dbText, 25)
tbDef.Fields.Append tbDef.CreateField("EST_ProgCatIdx", dbInteger)
tbDef.Fields.Append tbDef.CreateField("EST_ProgCatCode", dbText, 10)

tbDef.Fields.Append tbDef.CreateField("EST_Geslacht", dbText, 1)
tbDef.Fields.Append tbDef.CreateField("EST_MinYOB", dbLong)
tbDef.Fields.Append tbDef.CreateField("EST_MaxYOB", dbLong)
tbDef.Fields.Append tbDef.CreateField("EST_SumYOB", dbLong)


tbDef.Fields.Append tbDef.CreateField("EST_FullPloegCnt", dbInteger)
tbDef.Fields.Append tbDef.CreateField("EST_ActPloegCnt", dbInteger)
tbDef.Fields.Append tbDef.CreateField("EST_Startzwemmer_Geslacht", dbText, 1)
tbDef.Fields.Append tbDef.CreateField("EST_Startzwemmer_Geboortedatum", dbDate)
tbDef.Fields.Append tbDef.CreateField("EST_Startzwemmer_ActVereniging", dbText, 50)
tbDef.Fields.Append tbDef.CreateField("EST_NReserves", dbInteger)
tbDef.Fields.Append tbDef.CreateField("EST_Startnummer_Res_1", dbText, 12)
tbDef.Fields.Append tbDef.CreateField("EST_Naam_Res_1", dbText, 100)
tbDef.Fields.Append tbDef.CreateField("EST_Startnummer_Res_2", dbText, 12)
tbDef.Fields.Append tbDef.CreateField("EST_Naam_Res_2", dbText, 100)

Dim idx As Index
Set idx = tbDef.CreateIndex("P")
idx.Fields.Append idx.CreateField("EST_Wedstrijdnummer", dbLong)
idx.Fields.Append idx.CreateField("EST_Programmanummer", dbText, 12)
idx.Fields.Append idx.CreateField("EST_Estafettenummer", dbInteger)
idx.Fields.Append idx.CreateField("EST_Vereniging", dbText, 50)
idx.Primary = True
tbDef.Indexes.Append idx

Dim i As Integer
For i = 1 To MAX_ESTAF_CNT
  tbDef.Fields.Append tbDef.CreateField("EST_Startnummer_" & i, dbText, 12)
  tbDef.Fields.Append tbDef.CreateField("EST_Naam_" & i, dbText, 100)
Next i


tbDef.name = tbName

mydb.TableDefs.Append tbDef



analyzeEstafsCreateTable = True
Exit Function
fout:
If Err = 3011 Or Err = 7874 Then Resume Next

MsgBox Err & " " & Error$, 16
Exit Function
End Function


Public Function analyzeEstafs_Perform(singleWedOnly As Boolean, wednr As Long, wednrMeet As Long, tbName As String, blAppInsTdOptions As Boolean, Optional addToExistingTable As Boolean = False) As Boolean
On Error GoTo fout
analyzeEstafs_Perform = False

If Not addToExistingTable Then
  If Not analyzeEstafsCreateTable(tbName, blAppInsTdOptions) Then Exit Function
End If

Dim skWed As Recordset
Set skWed = CurrentDb().OpenRecordset("dtWedstrijden")
skWed.Index = "PrimaryKey"



Dim rs As Recordset
Dim outp As Recordset
Set outp = CurrentDb().OpenRecordset(tbName, dbOpenDynaset)
Dim sql As String
If (singleWedOnly) Then
  sql = "SELECT [dtProgrammanummers].Afstand as PROGAF, [dtProgrammanummers].categorie as PROGCAT, fmtName(nz([voornaam]), nz([voegsel]), nz([achternaam])) as NAAM,[dtLeden].Geslacht,  [dtLeden].Geboortedatum, [dtLeden].opm,[dtLeden].vereniging,[dtDeelnemers].[wedstrijdnr] as WEDNR, " & _
      "[dtDeelnemers].* FROM [dtProgrammanummers] INNER JOIN " & _
      "([dtLeden] INNER JOIN [dtDeelnemers] ON " & _
      "[dtLeden].Startnummer = [dtDeelnemers].Startnummer) " & _
      "ON ([dtProgrammanummers].Programmanummer = [dtDeelnemers].Programmanr) " & _
      "AND ([dtProgrammanummers].Wedstrijdnr = [dtDeelnemers].Wedstrijdnr) " & _
      "Where [dtDeelnemers].Wedstrijdnr = " & wednr & " and nz([estafette nummer]) <> 0 " & _
      "Order by [programmanr], [estafette nummer], [volgorde]"
Else
  sql = "SELECT [dtProgrammanummers].Afstand AS PROGAF, [dtProgrammanummers].Categorie AS PROGCAT, fmtName(nz([voornaam]),nz([voegsel]),nz([achternaam])) AS NAAM, " & _
  "[dtLeden].Geslacht, [dtLeden].Geboortedatum, [dtLeden].Opm, [dtLeden].vereniging, [dtDeelnemers].Wedstrijdnr AS WEDNR, [dtDeelnemers].*, [dtWedstrijden].[Wedstrijd nummer] " & _
  "FROM [dtWedstrijden] INNER JOIN ([dtProgrammanummers] INNER JOIN ([dtLeden] INNER JOIN [dtDeelnemers] ON [dtLeden].Startnummer = [dtDeelnemers].Startnummer) ON ([dtProgrammanummers].Programmanummer = [dtDeelnemers].Programmanr) AND ([dtProgrammanummers].Wedstrijdnr = [dtDeelnemers].Wedstrijdnr)) ON [dtWedstrijden].[Wedstrijd nummer] = [dtProgrammanummers].Wedstrijdnr " & _
  "WHERE (((Nz([Estafette nummer])) <> 0) And (    (([dtWedstrijden].[Wedstrijd nummer]) = " & wednrMeet & ") or ([MainWedstrijdNummer] = " & wednrMeet & ")     )   ) " & _
  "ORDER BY [dtDeelnemers].Wedstrijdnr, [dtDeelnemers].Programmanr, [dtDeelnemers].[Estafette nummer], [dtDeelnemers].Volgorde;"

End If

Set rs = CurrentDb().OpenRecordset(sql)

Dim curProg As String
Dim curEstNr As Integer
Dim curWedNr As Long

Dim curProgCat As String
Dim curProgAf As String
Dim curProgEstZwCnt As Integer

Dim tpProg As String
Dim tpEstNr As Integer
Dim tpWedNr As Long

Dim curEstSZStart As String
Dim curEstSZGes As String
Dim curEstSZGeb As Date
Dim curEstSZActVer As String

Dim curEstIsValid As Boolean
Dim curEstInvalidReason As String
Dim curEstTimeValid As Boolean
Dim curEstTimeBn As Integer
Dim curEstTimeTotSecs As Double
Dim curEstGes As String
Dim curEstGesDefined As Boolean
Dim curEstUseExtInsTime As Boolean
Dim curEstExtInsTime As Double
Dim curEstExtInsBn As Integer
Dim curEstExtInsWedNr As Long


Dim curEstMinYOB As Long
Dim curEstMaxYOB As Long
Dim curEstSumYOB As Long

Dim curEstMaxClubAge As Integer
Dim curEstLastValidVolg As Integer
Dim curEstNRes As Integer
Dim curEstIsCompleteRes As Boolean
Dim curEstResIsValid As Boolean
Dim curEstResInvalidReason As String
Dim curEstResTimeValid As Boolean
Dim curEstResTimeBn As Integer
Dim curEstResTimeTotSecs As Double
Dim curEstResGes As String
Dim curEstResGesDefined As Boolean

Dim curEstResMinYOB As Long
Dim curEstResMaxYOB As Long
Dim curEstResSumYOB As Long
Dim curEstResUseExtInsTime As Boolean
Dim curEstResExtInsTime As Double
Dim curEstResExtInsBn As Integer
Dim curEstResExtInsWedNr As Long


Dim curEstResMaxClubAge As Integer
Dim curEstResLastValidVolg As Integer
Dim curEstResStart1 As String
Dim curEstResNaam1 As String
Dim curEstResStart2 As String
Dim curEstResNaam2 As String

Dim curEstDeelns(0 To MAX_ESTAF_CNT - 1) As String
Dim curEstDeelnNames(0 To MAX_ESTAF_CNT - 1) As String
Dim curEstResDeelns(0 To MAX_ESTAF_CNT - 1) As String
Dim curEstResDeelnNames(0 To MAX_ESTAF_CNT - 1) As String

Dim curEstVer As String
Dim curEstVerIsMix As Boolean


Dim nVarProgs As Integer
Dim varProgNames(0 To MAX_N_PROGS) As String
Dim varProgOffs(0 To MAX_N_PROGS) As Integer
Dim varProgCatCnts(0 To MAX_N_PROGS) As Integer
'Dim varProgCatLists(0 To MAX_N_PROGS) As String
Dim varCatInfo(0 To MAX_N_VAR_CATS) As CAT_INFO
Dim dummy(0 To 0) As String


Dim isMultiVer As Boolean
isMultiVer = dbIsMultipleVer()


Dim verRS As Recordset
If (isMultiVer) Then
  Set verRS = CurrentDb().OpenRecordset("dtVerenigingen")
  verRS.Index = "PrimaryKey"
End If





Dim curWedInf As WED_BASIC_INFO



tpWedNr = -1
curProg = ""
curEstNr = -1
curWedNr = -1

rs.MoveFirst
Dim fin As Boolean
fin = False
Do Until fin
  If (rs.EOF) Then
    tpProg = ""
    tpEstNr = -1
    tpWedNr = -1
    fin = True
  Else
    tpProg = Nz(rs("programmanr"))
    tpEstNr = Nz(rs("estafette nummer"))
    tpWedNr = Nz(rs("WEDNR"))
  End If
  
  
  
  
  If (tpProg <> curProg Or tpEstNr <> curEstNr Or tpWedNr <> curWedNr) Then
    'finish old estaf
    If (curEstNr <> -1 And curWedNr <> -1 And curProgAf Like "*x*") Then
        
        outp.AddNew
        outp("EST_Wedstrijdnummer") = curWedNr
        outp("EST_Programmanummer") = curProg
        outp("EST_Estafettenummer") = curEstNr
        
        outp("EST_FullPloegCnt") = curProgEstZwCnt
        
        Dim actDepot As String
        Dim actVer As String
        
        actDepot = depot()
        actVer = ver()
        
        If (isMultiVer) And curEstVer <> "" And (Not curEstVerIsMix) Then
          verRS.Seek "=", curEstVer
          If (Not verRS.NoMatch) Then
            actDepot = verRS("V_Depotnummer")
            actVer = curEstVer
          End If
        End If
         
         
        outp("EST_Vereniging") = hzn(ver())
         
        outp("EST_ActDepotnummer") = hzn(actDepot)
        outp("EST_ActVereniging") = hzn(actVer)
        
        
        outp("Est_Startzwemmer_Geslacht") = hzn(curEstSZGes)
        outp("Est_Startzwemmer_Geboortedatum") = curEstSZGeb
        outp("EST_Startzwemmer_ActVereniging") = hzn(curEstSZActVer)
        
        
        Dim cat As String
        Dim i As Integer
        
        Dim blEstafCatOK As Boolean
        Dim iEstafSatCatIdx As Integer
        
        
        
        
        If (curEstIsCompleteRes) Then
        
        
            'Check validity of total estafette.
            
            If (curEstResIsValid) Then
              If (curEstResLastValidVolg <> curProgEstZwCnt) Then
                curEstResIsValid = False
                curEstResInvalidReason = "Ploeg heeft " & curEstResLastValidVolg & " zwemmers (ipv " & curProgEstZwCnt & ")"
              End If
            End If
            
            
            If (curEstResIsValid) Then
            
            
              
            
            
              blEstafCatOK = False
              iEstafSatCatIdx = -1
              
              If (catIsMCat(curProgCat)) Then
                iEstafSatCatIdx = catInfoGetEstSatisfiedCatIdx_bare(curWedInf.lftBep, curProg, curEstResMinYOB, curEstResMaxYOB, curEstResSumYOB, curEstResLastValidVolg, curEstResGes, nVarProgs, varProgNames, varProgOffs, varProgCatCnts, varCatInfo, curWedInf.ageDate)
                If (iEstafSatCatIdx >= 0) Then
                  blEstafCatOK = True
                  outp("EST_ProgCategorie") = hzn(Trim(varCatInfo(iEstafSatCatIdx).cat))
                  outp("EST_ProgCatIdx") = iEstafSatCatIdx
                  outp("EST_ProgCatCode") = hzn(Trim(varCatInfo(iEstafSatCatIdx).Code))
                End If
              Else
                blEstafCatOK = (cat_voldoet_est_bare(curEstResMinYOB, curEstResMaxYOB, curEstResSumYOB, curEstResLastValidVolg, curEstResGes, curProgCat, curWedInf.lftBep, curWedInf.ageDate, True) = CAT_OK)
              End If
              
              If Not blEstafCatOK Then
                curEstResIsValid = False
                curEstResInvalidReason = "Estafette voldoet niet aan leeftijdscategorie."
              End If
              
              
              
            End If
            
        
        
          
          cat = ""
          
          
          If (curEstResUseExtInsTime) Then
            outp("EST_UseExtInsTime") = True
            outp("EST_Inschrijftijd") = curEstResExtInsTime
            outp("EST_BaanInschrijftijd") = curEstResExtInsBn
            outp("EST_ExtInsWedNr") = curEstResExtInsWedNr
          Else
            outp("EST_UseExtInsTime") = False
            'Use normal inschrijftijd
            If (curEstResTimeValid) Then
              outp("EST_Inschrijftijd") = swtFromSeconds(curEstResTimeTotSecs)
              outp("EST_BaanInschrijftijd") = curEstResTimeBn
            Else
              outp("EST_Inschrijftijd") = 0
              outp("EST_BaanInschrijftijd") = 0
            End If
          End If
          
          If (blAppInsTdOptions) Then
            If (curEstResTimeValid) Then
              outp("EST_INS_SumIndTimes") = swtFromSeconds(curEstResTimeTotSecs)
            Else
              outp("EST_INS_SumIndTimes") = 0
            End If
            outp("EST_INS_UseExtInsTime") = curEstResUseExtInsTime
            
            If (curEstResUseExtInsTime) Then
              outp("EST_INS_ExtInsTime") = curEstResExtInsTime
              outp("EST_INS_ExtInsWedNr") = curEstResExtInsWedNr
            Else
              outp("EST_INS_ExtInsTime") = Null
              outp("EST_INS_ExtInsWedNr") = Null
            End If
          End If
          
          
          
          outp("EST_VALID") = curEstResIsValid
          outp("EST_InvalidReason") = hzn(curEstResInvalidReason)
        'outp("EST_Startzwemmer") = hzn(curEstStartZwemmer)
          outp("EST_IsReserve") = True
          outp("EST_Categorie") = hzn(cat)
          

        
           
          outp("EST_ActPloegCnt") = curEstResLastValidVolg
          outp("Est_NReserves") = 0
          outp("Est_Startnummer_Res_1") = Null
          outp("EST_Startnummer_Res_2") = Null
          
          For i = 1 To curEstResLastValidVolg
            outp("EST_Startnummer_" & i) = hzn(curEstResDeelns(i - 1))
            outp("EST_Naam_" & i) = hzn(curEstResDeelnNames(i - 1))
          Next i
          
          outp("EST_MinYOB") = curEstResMinYOB
          outp("EST_MaxYOB") = curEstResMaxYOB
          outp("EST_SumYOB") = curEstResSumYOB
          
          If (curEstResGesDefined) Then
            outp("EST_Geslacht") = curEstResGes
          Else
            outp("EST_Geslacht") = "*"
          End If
          
        Else
        
          'not complete reserve.
          
            'Check validity of total estafette.
            
            If (curEstIsValid) Then
              If (curEstLastValidVolg <> curProgEstZwCnt) Then
                curEstIsValid = False
                curEstInvalidReason = "Ploeg heeft " & curEstLastValidVolg & " zwemmers (ipv " & curProgEstZwCnt & ")"
              End If
            End If
            
            
            If (curEstIsValid) Then
              blEstafCatOK = False
              iEstafSatCatIdx = -1
              
              If (catIsMCat(curProgCat)) Then
                iEstafSatCatIdx = catInfoGetEstSatisfiedCatIdx_bare(curWedInf.lftBep, curProg, curEstMinYOB, curEstMaxYOB, curEstSumYOB, curEstLastValidVolg, curEstGes, nVarProgs, varProgNames, varProgOffs, varProgCatCnts, varCatInfo, curWedInf.ageDate)
                If (iEstafSatCatIdx >= 0) Then
                  blEstafCatOK = True
                  outp("EST_ProgCategorie") = hzn(Trim(varCatInfo(iEstafSatCatIdx).cat))
                  outp("EST_ProgCatIdx") = iEstafSatCatIdx
                  outp("EST_ProgCatCode") = hzn(Trim(varCatInfo(iEstafSatCatIdx).Code))
                End If
              Else
                blEstafCatOK = (cat_voldoet_est_bare(curEstMinYOB, curEstMaxYOB, curEstSumYOB, curEstLastValidVolg, curEstGes, curProgCat, curWedInf.lftBep, curWedInf.ageDate, True) = CAT_OK)
              End If
              
              If Not blEstafCatOK Then
                curEstIsValid = False
                curEstInvalidReason = "Estafette voldoet niet aan leeftijdscategorie."
              End If
              
              
              
            End If
          
          
        
          cat = ""
          
          
          
          If (curEstUseExtInsTime) Then
            outp("EST_UseExtInsTime") = True
            outp("EST_Inschrijftijd") = curEstExtInsTime
            outp("EST_BaanInschrijftijd") = curEstExtInsBn
            outp("EST_ExtInsWedNr") = curEstExtInsWedNr
          Else
            outp("EST_UseExtInsTime") = False
            'Use normal inschrijftijd
            If (curEstTimeValid) Then
              outp("EST_Inschrijftijd") = swtFromSeconds(curEstTimeTotSecs)
              outp("EST_BaanInschrijftijd") = curEstTimeBn
            Else
              outp("EST_Inschrijftijd") = 0
              outp("EST_BaanInschrijftijd") = 0
            End If
          End If
          
          If (blAppInsTdOptions) Then
            If (curEstTimeValid) Then
              outp("EST_INS_SumIndTimes") = swtFromSeconds(curEstTimeTotSecs)
            Else
              outp("EST_INS_SumIndTimes") = 0
            End If
            outp("EST_INS_UseExtInsTime") = curEstUseExtInsTime
            
            If (curEstUseExtInsTime) Then
              outp("EST_INS_ExtInsTime") = curEstExtInsTime
              outp("EST_INS_ExtInsWedNr") = curEstExtInsWedNr
            Else
              outp("EST_INS_ExtInsTime") = Null
              outp("EST_INS_ExtInsWedNr") = Null
            End If
          End If
                    
          
          outp("EST_VALID") = curEstIsValid
          outp("EST_InvalidReason") = hzn(curEstInvalidReason)
        'outp("EST_Startzwemmer") = hzn(curEstStartZwemmer)
          outp("EST_IsReserve") = False
          outp("EST_Categorie") = hzn(cat)
        
           
          outp("EST_ActPloegCnt") = curEstLastValidVolg
          outp("Est_NReserves") = curEstNRes
          outp("Est_Startnummer_Res_1") = hzn(curEstResStart1)
          outp("EST_Naam_Res_1") = hzn(curEstResNaam1)
          outp("EST_Startnummer_Res_2") = hzn(curEstResStart2)
          outp("EST_Naam_Res_2") = hzn(curEstResNaam2)
          For i = 1 To curEstLastValidVolg
            outp("EST_Startnummer_" & i) = hzn(curEstDeelns(i - 1))
            outp("EST_Naam_" & i) = hzn(curEstDeelnNames(i - 1))
          Next i
          
          outp("EST_MinYOB") = curEstMinYOB
          outp("EST_MaxYOB") = curEstMaxYOB
          outp("EST_SumYOB") = curEstSumYOB
          
          If (curEstGesDefined) Then
            outp("EST_Geslacht") = curEstGes
          Else
            outp("EST_Geslacht") = "*"
          End If
          
          
        End If
        
        outp.Update
        
    End If
    
    
    

    
    If (curWedNr <> tpWedNr) Then
      If (tpWedNr <> -1) Then
      
        'Reinitialize category list
        snel_cat_voldoet_reset
      
        'Read new VarProgs.
        If Not catInfoGetListForWed(tpWedNr, nVarProgs, varProgNames, dummy, varProgOffs, varProgCatCnts, varCatInfo, False) Then
          Exit Function
        End If
      
        Dim blWedIsFnd As Boolean
        If Not wedLookup(tpWedNr, blWedIsFnd, curWedInf) Then
          Exit Function
        End If
        If (Not blWedIsFnd) Then
          Err.Raise 1, , "Kon wedstrijd: " & tpWedNr & " niet vinden"
        End If
      End If
    End If
    
    'init new estafette
    curProg = tpProg
    curWedNr = tpWedNr
    curEstNr = tpEstNr
    curEstIsValid = True
    curEstInvalidReason = ""
    curEstTimeTotSecs = 0
    curEstTimeValid = True
    curEstTimeBn = 50
    curEstGesDefined = False
    curEstMaxClubAge = -1
    curEstLastValidVolg = 0
    curEstNRes = 0
    curEstResStart1 = ""
    curEstResNaam1 = ""
    curEstResStart2 = ""
    curEstResNaam2 = ""
    curEstSZGes = "*"
    curEstSZGeb = #1/1/1900#
    curEstSZStart = ""
    curEstSZActVer = ""
    
    curEstUseExtInsTime = False
    curEstExtInsTime = 0
    curEstExtInsBn = 0
    curEstExtInsWedNr = 0
    
    curEstIsCompleteRes = True
    curEstResIsValid = True
    curEstResInvalidReason = ""
    curEstResTimeTotSecs = 0
    curEstResTimeValid = True
    curEstResTimeBn = 50
    curEstResGesDefined = False
    curEstResMaxClubAge = -1
    curEstResLastValidVolg = 0
    
    curEstResUseExtInsTime = False
    curEstResExtInsTime = 0
    curEstResExtInsBn = 0
    curEstResExtInsWedNr = 0
    
    curEstMinYOB = -1
    curEstMaxYOB = -1
    curEstSumYOB = -1
    
    curEstResMinYOB = -1
    curEstResMaxYOB = -1
    curEstResSumYOB = -1
    
    curEstVer = ""
    curEstVerIsMix = False
    
    
    If (Not rs.EOF) Then
      curProgCat = Nz(rs("PROGCAT"))
      curProgAf = Nz(rs("PROGAF"))
      curProgEstZwCnt = afstand_n_zwemmers(curProgAf)
    End If
    
  End If
  
  
  
  If rs.EOF Then Exit Do
  
  Dim vg As Integer
  Dim st As String
  Dim nm As String
  Dim gs As String
  Dim gb As Date
  vg = Nz(rs("Volgorde"))
  st = Nz(rs("startnummer"))
  nm = Nz(rs("Naam"))
  gs = Nz(rs("geslacht"))
  gb = Nz(rs("geboortedatum"))
  Dim td As Double
  td = Nz(rs("inschrijftijd"))
  Dim lWedNrInsTijd As Long
  lWedNrInsTijd = Nz(rs("WedstrijdnrInsTijd"))
  
  Dim tpUseExtInsTime As Boolean
  Dim tpExtInsTime As Double
  Dim tpExtInsWedNr As Long
  
  tpUseExtInsTime = Nz(rs("ESTINS_UseExtInsTime"), False)
  tpExtInsTime = Nz(rs("ESTINS_ExtInsTime"), 0)
  tpExtInsWedNr = Nz(rs("ESTINS_ExtInsWedNr"), 0)
  
  
  Dim tpVer As String
  If (isMultiVer) Then
    tpVer = Nz(rs("vereniging"))
    If (tpVer <> "") Then
      If (curEstVer = "") Then
        curEstVer = tpVer
      ElseIf (tpVer <> curEstVer) Then
        curEstVerIsMix = True
      End If
    End If
  End If
  
  
      
  'Test individual swimmer against category.
  If (Not snel_cat_voldoet_bare(st, curProgCat, gs, Nz(rs("geboortedatum"), #1/1/1900#), Nz(rs("opm")), curWedInf.lftBep, True, curWedInf.ageDate, False, True)) Then
    If (curEstIsValid) Then
       curEstIsValid = False
       curEstInvalidReason = "Zwemmer: " & st & " voldoet niet aan categorie."
    End If
  End If
  
  
  
  Dim isRes As Boolean
  isRes = Nz(rs("Reserve")) = "J"
  
  
  If (vg = 1) Then
    If ((Not isRes) Or (isRes And curEstSZStart = "")) Then
      curEstSZStart = st
      curEstSZGes = gs
      curEstSZGeb = Nz(rs("Geboortedatum"), #1/1/1900#)
      curEstSZActVer = Nz(rs("Vereniging"))
    End If
  End If
  
  
    
  Dim curYOB As Long
  curYOB = stnrExtractYOB(st, curWedInf.ageDate, gb)
  
  
  If (isRes) Then
    If (curEstNRes < MAX_ESTAF_RES) Then
      If (curEstNRes = 0) Then
        curEstResStart1 = st
        curEstResNaam1 = nm
      ElseIf (curEstNRes = 1) Then
        curEstResStart2 = st
        curEstResNaam2 = st
      End If
      curEstNRes = curEstNRes + 1
    End If
    If (curEstIsCompleteRes) Then
    
    
      If (curYOB < curEstResMinYOB) Or (curEstResMinYOB = -1) Then
        curEstResMinYOB = curYOB
      End If
      
      If (curYOB > curEstResMaxYOB) Or (curEstResMaxYOB = -1) Then
        curEstResMaxYOB = curYOB
      End If
      
      If (curEstResSumYOB = -1) Then
        curEstResSumYOB = 0
      End If
      curEstResSumYOB = curEstResSumYOB + curYOB
    

    
      If (Not curEstResGesDefined) Then
        curEstResGes = gs
        curEstResGesDefined = True
      ElseIf gs <> curEstResGes Then
        curEstResGes = "*"
      End If
    
  
      'First check if the swimmer is valid, that is, if
      'res volgnr is unique.
      If (Not (vg = curEstResLastValidVolg + 1)) Then
        If (curEstResIsValid) Then
          curEstResIsValid = False
          curEstResInvalidReason = "Volgnummer " & vg & " sluit niet aan."
        End If
      Else
        curEstResDeelns(curEstResLastValidVolg) = st
        curEstResDeelnNames(curEstResLastValidVolg) = nm
        curEstResLastValidVolg = vg
        'tijd mee tellen.
        If (curEstResTimeValid) Then
          If (swtIsValid(td)) Then
            curEstResTimeTotSecs = curEstResTimeTotSecs + swtToSeconds(td)
            If (curEstResTimeBn = 50) Then
              skWed.Seek "=", lWedNrInsTijd
              If Not skWed.NoMatch Then
                If (Nz(skWed("baanlengte")) <> 50) Then
                  curEstResTimeBn = 25
                End If
              Else
                curEstResTimeBn = 25
              End If
            End If
          Else
            curEstResTimeValid = False
          End If
        End If
      End If
      
      If tpUseExtInsTime And (Not curEstResUseExtInsTime) Then
        curEstResUseExtInsTime = True
        curEstResExtInsTime = tpExtInsTime
        curEstResExtInsWedNr = tpExtInsWedNr
        skWed.Seek "=", curEstResExtInsWedNr
        If Not skWed.NoMatch Then
          curEstResExtInsBn = Nz(skWed("baanlengte"))
        End If
      End If
      
      
    ElseIf (curEstNRes >= MAX_ESTAF_RES) Then
      If curEstIsValid Then
        curEstIsValid = False
        curEstInvalidReason = "Teveel reserves."
      End If
    End If
  Else ' niet reserve.
    If (curEstIsCompleteRes) Then
      If (curEstResLastValidVolg > MAX_ESTAF_RES) Then
        curEstIsValid = False
        curEstInvalidReason = "Teveel reserves."
      End If
    End If
    curEstIsCompleteRes = False
    
   
    
    
    
    If (Not curEstGesDefined) Then
      curEstGes = gs
      curEstGesDefined = True
    ElseIf gs <> curEstGes Then
      curEstGes = "*"
    End If
    
    
    If (curEstMinYOB = -1) Or (curYOB < curEstMinYOB) Then
      curEstMinYOB = curYOB
    End If
    
    If (curEstMaxYOB = -1) Or (curYOB > curEstMaxYOB) Then
      curEstMaxYOB = curYOB
    End If
    
    If (curEstSumYOB = -1) Then
      curEstSumYOB = 0
    End If
    
    curEstSumYOB = curEstSumYOB + curYOB
    
  
    'First check if the swimmer is valid, that is, if
    'volgnr is unique.
    If (Not (vg = curEstLastValidVolg + 1)) Then
      If (curEstIsValid) Then
        curEstIsValid = False
        curEstInvalidReason = "Volgnummer " & vg & " sluit niet aan."
      End If
    Else
      curEstDeelns(curEstLastValidVolg) = st
      curEstDeelnNames(curEstLastValidVolg) = nm
      curEstLastValidVolg = vg
      'tijd mee tellen.
      If (curEstTimeValid) Then
        If (swtIsValid(td)) Then
          curEstTimeTotSecs = curEstTimeTotSecs + swtToSeconds(td)
          If (curEstTimeBn = 50) Then
            skWed.Seek "=", lWedNrInsTijd
            If Not skWed.NoMatch Then
              If (Nz(skWed("baanlengte")) <> 50) Then
                curEstTimeBn = 25
              End If
            Else
              curEstTimeBn = 25
            End If
          End If
        Else
          curEstTimeValid = False
        End If
      End If
    End If
    
    
    
    If tpUseExtInsTime And (Not curEstUseExtInsTime) Then
      curEstUseExtInsTime = True
      curEstExtInsTime = tpExtInsTime
      curEstExtInsWedNr = tpExtInsWedNr
      skWed.Seek "=", curEstExtInsWedNr
      If Not skWed.NoMatch Then
        curEstExtInsBn = Nz(skWed("baanlengte"))
      End If
    End If
    
    
  End If ' if reserve
    
    
  
  
  
    
    

  rs.MoveNext
Loop



appCleanRS rs
appCleanRS skWed
appCleanRS outp

analyzeEstafs_Perform = True
Exit Function
fout:
If (Err = 3021) Then Resume Next
MsgBox Err & " analyzeEstafs_Perform" & vbCrLf & Error$, 16
Exit Function

'debug
On Error GoTo 0
Resume
End Function




Public Function estPrepareInsTd(ByVal wednr As Long, ByVal prognr As String) As Boolean
On Error GoTo fout
estPrepareInsTd = False


If Not analyzeEstafs_Perform(True, wednr, wednr, "~AN_INS_Estafs", True, False) Then
  Exit Function
End If



estPrepareInsTd = True
Exit Function
fout:
MsgBox Err & " estPrepareInsTd" & vbCrLf & Error$, 16
Exit Function
End Function

Public Function estFinalizeInsTd(ByVal wednr As Long, ByVal prognr As String) As Boolean
On Error GoTo fout
estFinalizeInsTd = False

'Set the estafette inschrijftijden.

Dim est As Recordset
Set est = CurrentDb().OpenRecordset("~AN_INS_Estafs")
est.Index = "P"

Dim sql As String

sql = dlnGetPloegledenSQL(True, False, prognr, wednr, wednr, False)
Dim rs As Recordset
Set rs = CurrentDb().OpenRecordset(sql)

rs.MoveFirst

Do Until rs.EOF

  Dim tpEst As Integer
  tpEst = rs("Estafette nummer")
  
  est.Seek "=", wednr, prognr, tpEst, hzn(ver())
  
  If (Not est.NoMatch) Then

    Dim tpUseExtInsTime As Boolean, tpExtInsTime As Double, tpExtInsWedNr As Long
  
    tpUseExtInsTime = Nz(est("EST_INS_UseExtInsTime"))
    tpExtInsTime = Nz(est("EST_INS_ExtInsTime"))
    tpExtInsWedNr = Nz(est("EST_INS_ExtInsWedNr"))
    
    rs.Edit
      rs("ESTINS_UseExtInsTime") = tpUseExtInsTime
      rs("ESTINS_ExtInsTime") = tpExtInsTime
      rs("ESTINS_ExtInsWedNr") = tpExtInsWedNr
    rs.Update
  
  End If
  

  rs.MoveNext
Loop

appCleanRS rs
appCleanRS est



DoCmd.DeleteObject acTable, "~AN_INS_Estafs"

estFinalizeInsTd = True
Exit Function
fout:
If (Err = 3021) Then Resume Next ' no current record
If (Err = 3011) Or (Err = 7874) Then 'could not find object to delete
 Resume Next
End If
MsgBox Err & " estFinalizeInsTd" & vbCrLf & Error$, 16
Exit Function
End Function