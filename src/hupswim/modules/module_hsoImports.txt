Option Compare Database
Option Explicit

Global Const KRTY_VALID = -1
Global Const KRTY_UNKNOWN_FILE = 0
Global Const KRTY_INV_XML_SYNTAX = 1
Global Const KRTY_INV_XML_STR = 2

Private Function wasParseDate(ds As String) As Date
On Error Resume Next
If (ds = "") Then
  wasParseDate = #1/1/1900#
  Exit Function
End If
Dim yr As Integer
Dim mn As Integer
Dim dy As Integer
yr = CInt(val(Right(ds, 4)))
mn = CInt(val(Mid(ds, 4, 2)))
dy = CInt(val(Left(ds, 2)))
If (yr <= 0) Or (dy <= 0) Or (mn <= 0) Then
  wasParseDate = #1/1/1900#
Else
  wasParseDate = DateSerial(yr, mn, dy)
End If

End Function




Public Function analyzeKringTy(fName As String, ByVal blDisplayError, ByRef bckValid As Boolean, ByRef bckInvalidReason As Integer, ByRef bckInvalidString As String, ByRef bckDateS As String, ByRef bckTimeS As String, ByRef bckClub As String) As Boolean
On Error GoTo fout
analyzeKringTy = False

bckValid = False

If (fName = "") Or Not FileExists(fName) Then
  bckInvalidReason = KRTY_UNKNOWN_FILE
  bckInvalidString = "Het bestand: " & vbCrLf & fName & vbCrLf & "kon niet worden gevonden."
  Err.Raise 1, , bckInvalidString
  Exit Function
End If

Dim tpVer As String
tpVer = ""

Dim xmlErrCode As Integer
Dim xmlErrMsg As String
xmlErrCode = -1
xmlErrMsg = ""

On Error GoTo xmlFout
tpVer = gXMLReader.readFirstTagData(fName, "VFPData/kringty/verenig", True, 100, False)
On Error GoTo fout

If (xmlErrCode >= 0) Then
  bckInvalidReason = KRTY_INV_XML_SYNTAX
  bckInvalidString = xmlErrMsg
  Err.Raise 1, , bckInvalidString
ElseIf (tpVer = "") Then
  bckInvalidReason = KRTY_INV_XML_STR
  bckInvalidString = "Het bestand: " & vbCrLf & fName & vbCrLf & "is geen geldig kringtijden bestand." & vbCrLf & "Het xml-object <VFPData/Kringty/Verenig> kon niet worden gevonden."
  Err.Raise 1, , bckInvalidString
End If

bckClub = tpVer

bckTimeS = FileTimeStr(fName)
bckDateS = FileDateStr(fName)

bckValid = True
bckInvalidReason = KRTY_VALID



analyzeKringTy = True
Exit Function
fout:

Dim errCode As Integer
errCode = Err
Dim errMsg As String
errMsg = Error$

If (errCode = 1 And Not blDisplayError) Then
  analyzeKringTy = True
  Exit Function
End If

MsgBox errCode & " " & errMsg, 16
Exit Function

xmlFout:
xmlErrCode = Err
xmlErrMsg = Error$
Resume Next

End Function


Private Function import_zwemmers_from_was2005_read_phase_from_was(fName As String) As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_read_phase_from_was = False

DoCmd.DeleteObject acTable, "__was2005_zwemmers_inlees"

If Not (ImportDBase7Table(fName, "__was2005_zwemmers_inlees")) Then
  Exit Function
End If


import_zwemmers_from_was2005_read_phase_from_was = True
Exit Function
fout:
If Err = 3011 Or Err = 7874 Then Resume Next ' could not find object to delete.
MsgBox Err & " " & Error$, 16
End Function


Private Function import_zwemmers_from_was2005_read_phase(fName As String) As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_read_phase = False


Dim ext As String
ext = Right(fName, 3)

If (ext = "dbf") Then
  If Not import_zwemmers_from_was2005_read_phase_from_was(fName) Then
    Exit Function
  End If
ElseIf (ext = "zip") Then
  If Not splFillZwemmers(fName) Then
    Exit Function
  End If
Else
  Err.Raise 1, , "Ongeldig bestandsnaam gevonden: " & Chr(13) & fName & Chr(13) & "Kies een Splash backup (*.zip) of een was2005 zwemmers bestand (zwemmers.dbf)."
End If


import_zwemmers_from_was2005_read_phase = True
Exit Function
fout:

If Err = 3011 Or Err = 7874 Then Resume Next ' could not find object to delete.

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
Exit Function



End Function


Private Function import_nieuw_tijden_from_was2005_read_was(fName As String) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_read_was = False

DoCmd.SetWarnings False
Dim sql As String
sql = "Delete * from [hsoWAS_XML_KRTY_IN];"
DoCmd.RunSQL sql
DoCmd.SetWarnings True

If Not (gXMLReader.importXMLTable(fName, "hsoWAS_XML_KRTY_IN", True)) Then
  Exit Function
End If




import_nieuw_tijden_from_was2005_read_was = True
Exit Function
fout:
DoCmd.SetWarnings True
MsgBox Err & " " & Error$, 16
Exit Function
End Function


Private Function import_nieuw_tijden_from_was2005_read_phase(fName As String, blUseDateCrit As Boolean, minDate As Date) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_read_phase = False


Dim ext As String
ext = Right(fName, 3)
If (ext = "xml") Then
  If Not import_nieuw_tijden_from_was2005_read_was(fName) Then
    Exit Function
  End If
ElseIf (ext = "zip") Then
  If Not splFillKringty2005(fName) Then
    Exit Function
  End If
Else
  Err.Raise 1, , "Ongeldig bestandsnaam gevonden: " & Chr(13) & fName & Chr(13) & "Kies een Splash backup (*.zip) of een kringtijden bestand (kringty.xml)."
End If


'Now delete all times which are too old.
If (blUseDateCrit And lenDateIsValid(minDate)) Then
  Dim delSQL As String
  
  delSQL = "delete * from hsoWAS_XML_KRTY_IN where [datum] < #" & Format(minDate, "mm\-dd\-yyyy") & "#;"
  
  DoCmd.SetWarnings False
  DoCmd.RunSQL delSQL
  DoCmd.SetWarnings True
End If



import_nieuw_tijden_from_was2005_read_phase = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function



Private Function import_glb_from_was2005_handle_ver(ByRef rsInp As Recordset, ByRef rsOut As Recordset, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_glb_from_was2005_handle_ver = False

'Nu moeten we afhandelen welke verenigingen er toegevoegd gaan worden.



Dim rsVer As Recordset
Set rsVer = CurrentDb().OpenRecordset("dtVerenigingen")
rsVer.Index = "Depot"

Dim blIsEmpty As Boolean
Dim blEncEmpty As Boolean
blEncEmpty = False


rsInp.MoveFirst
Do Until rsInp.EOF

  Dim tpDep As String
  Dim tpVer As String
  
  blIsEmpty = False
  
  tpDep = Nz(rsInp("DEP"))
  tpVer = Nz(rsInp("VER"))

  
  If (tpDep = "") Or (tpVer = "") Then
    blIsEmpty = True
    'If (tpVer = "") Then
      tpVer = "Onbekend"
    'End If
    'If (tpDep = "") Then
      tpDep = "00-xxx"
    'End If
  End If
  
  If (Not blIsEmpty Or (Not blEncEmpty)) Then
    'Append
    
    Dim blIsKnown As Boolean
    Dim sKnownVerName As String
    Dim sKnownVerCode As String
    
    sKnownVerName = ""
    sKnownVerCode = ""
    
    rsVer.Seek "=", tpDep
    blIsKnown = Not rsVer.NoMatch
    
    If (blIsKnown) Then
      sKnownVerName = Nz(rsVer("V_Naam"))
      sKnownVerCode = Nz(rsVer("V_Afkorting"))
    End If
    
    If Not (blIsKnown) Then
      If (tpDep = depot()) Then
        blIsKnown = True
        sKnownVerName = ver()
      End If
    End If
    
    
    
    rsOut.AddNew
      rsOut("wasDepot") = tpDep
      rsOut("wasNaam") = tpVer
      rsOut("bekend") = blIsKnown
      If (blIsKnown) Then
        rsOut("importeren") = True
      Else
        rsOut("importeren") = blDefImpUnknown
      End If
      If (blIsKnown) Then
        rsOut("impNaam") = hzn(sKnownVerName)
        rsOut("impCode") = hzn(sKnownVerCode)
      Else
        rsOut("impNaam") = Null
        rsOut("impCode") = Null
      End If
    rsOut.Update
    
  End If

  rsInp.MoveNext
Loop




import_glb_from_was2005_handle_ver = True
Exit Function
fout:
If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
Exit Function


On Error GoTo 0
Resume

End Function



Private Function import_nieuw_tijden_from_was2005_ver_phase(blOpenVerForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_ver_phase = False

'Nu moeten we afhandelen welke verenigingen er toegevoegd gaan worden.

Dim sql As String
sql = "Delete * from [~imp_tijden_was2005_vers];"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True



SysCmd acSysCmdSetStatus, "Bezig met analyseren verenigingen."



Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_vers];", dbOpenDynaset)


sql = "SELECT hsoWAS_XML_KRTY_IN.verenig as VER, hsoWAS_XML_KRTY_IN.depotno as DEP FROM hsoWAS_XML_KRTY_IN " & _
      "GROUP BY hsoWAS_XML_KRTY_IN.verenig, hsoWAS_XML_KRTY_IN.depotno;"

Dim inv As Recordset
Set inv = CurrentDb().OpenRecordset(sql)

If Not import_glb_from_was2005_handle_ver(inv, uit, blDefImpUnknown) Then
  Exit Function
End If



SysCmd acSysCmdClearStatus

'Hier formulier openen.
If (blOpenVerForm) Then
  DoCmd.OpenForm "~imp_tijden_ver_form"
End If




DoCmd.SetWarnings True
import_nieuw_tijden_from_was2005_ver_phase = True
Exit Function
fout:
If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
Exit Function


On Error GoTo 0
Resume

End Function





Private Function import_nieuw_tijden_from_was2005_zw_phase(blOpenZwForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_zw_phase = False


'Nu moeten we afhandelen welke deelnemers er toegevoegd gaan worden.

Dim sql As String
sql = "Delete * from [~imp_tijden_was2005_zwemmers];"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True



SysCmd acSysCmdSetStatus, "Bezig met analyseren zwemmers."


Dim inpVer As Recordset
Set inpVer = CurrentDb().OpenRecordset("~imp_tijden_was2005_vers")
inpVer.Index = "PrimaryKey"


Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_zwemmers];", dbOpenDynaset)

sql = "SELECT startnr_from_was(nz([startno])) AS st, First(voorn) AS vn, " & _
      "First(achtern) AS an, First(tusvoegsel) AS vg, first(verenig) as VER, first(depotno) as DEP, " & _
      "First([hsoWAS_XML_KRTY_IN].mj) AS mj FROM hsoWAS_XML_KRTY_IN where nz([startno]) <> """" GROUP BY startnr_from_was(nz([startno]));"
Dim inv As Recordset
Set inv = CurrentDb().OpenRecordset(sql)

Dim ld As Recordset
Set ld = CurrentDb().OpenRecordset("Select * from [dtLeden]")

Dim st As String
Dim blExist As Boolean
inv.MoveFirst
Do Until inv.EOF

  Dim blProcess As Boolean
  blProcess = True
  
  Dim impVerName As String
  impVerName = ""
  


  Dim tpDep As String
  Dim tpVer As String
  
  tpDep = Nz(inv("DEP"))
  tpVer = Nz(inv("VER"))
  
  If (tpDep = "") Or (tpVer = "") Then
    tpDep = "00-xxx"
    tpVer = "Onbekend"
  End If
  
  inpVer.Seek "=", tpDep, tpVer
  If inpVer.NoMatch Then
    Err.Raise 1, , "Internal error. Could not find verenigingsdata to import."
  End If
  
  If (Not inpVer("importeren")) Then
    blProcess = False
  Else
    impVerName = Nz(inpVer("impNaam"))
    If (impVerName = "") Then
      impVerName = Nz(inpVer("wasNaam"))
    End If
  End If
  
  
    

  If (blProcess) Then

    st = Nz(inv("st"))
    ld.FindFirst "[startnummer]=""" & st & """"
    blExist = Not ld.NoMatch
    
    uit.AddNew
    uit("startnummer") = inv("st")
    uit("was_startnummer") = startnr_to_was(st)
    uit("voornaam") = inv("vn")
    uit("voegsel") = inv("vg")
    uit("achternaam") = inv("an")
    uit("geslacht") = ges_from_was(Nz(inv("mj")))
    uit("bekend") = blExist
    If (blDefImpUnknown) Then
      uit("importeren") = True
    Else
      uit("importeren") = blExist
    End If
    
    uit("vereniging") = hzn(impVerName)
    
    uit.Update
    
  End If
  
  
  inv.MoveNext
Loop

'Hier formulier openen.
If (blOpenZwForm) Then
  DoCmd.OpenForm "~imp_tijden_zw_form"
End If



SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
import_nieuw_tijden_from_was2005_zw_phase = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
Exit Function


On Error GoTo 0
Resume

End Function



Private Function import_nieuw_tijden_from_was2005_wed_phase(blShowWedForm As Boolean) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_wed_phase = False

'Nu moeten we afhandelen welke wedstrijden er toegevoegd moeten worden.BOE

Dim sql As String
sql = "Delete * from [~imp_tijden_was2005_wedstrijden];"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True

Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_wedstrijden];", dbOpenDynaset)

sql = "SELECT hsoWAS_XML_KRTY_IN.datum, hsoWAS_XML_KRTY_IN.plaats, hsoWAS_XML_KRTY_IN.soort, hsoWAS_XML_KRTY_IN.baan " & _
    "FROM hsoWAS_XML_KRTY_IN WHERE (((hsoWAS_XML_KRTY_IN.inlees_toevoegen) = True)) " & _
    "GROUP BY hsoWAS_XML_KRTY_IN.datum, hsoWAS_XML_KRTY_IN.plaats, hsoWAS_XML_KRTY_IN.soort, hsoWAS_XML_KRTY_IN.baan;"

Dim inv As Recordset
Set inv = CurrentDb().OpenRecordset(sql)

Dim wd As Recordset
Set wd = CurrentDb().OpenRecordset("Select * from [dtWedstrijden]")

Dim dat As String
Dim pl As String
Dim bs As String
Dim bn As Integer
Dim blExist As Boolean
Dim mwd As Long
Dim crt As String
Dim fin As Boolean


SysCmd acSysCmdSetStatus, "Bezig met analyseren in te lezen wedstrijden."


inv.MoveFirst
Do Until inv.EOF
  dat = Nz(inv("datum"), #1/1/1900#)
  bs = Nz(inv("soort"))
  pl = Nz(inv("plaats"))
  bn = Nz(inv("baan"), 0)
  
  crt = "[datum]=#" & Format(dat, "mm\-dd\-yyyy") & "# and [baanlengte] = " & bn
  
  wd.FindFirst crt
  '& " and left(nz([beschrijving]), 10) = """ & left(bs, 10) & """"
  fin = wd.NoMatch
  blExist = False
  While Not fin
    
    'Here determine if this wedstrijd is a match.
    'Moeten nog even een beter algoritme verzinnen.
    
    
    mwd = Nz(wd("wedstrijd nummer"), 0)
    
    
    If isPlaatsMatch(Nz(wd("plaats")), pl) And isBesMatch(Nz(wd("Beschrijving")), bs) Then
      blExist = True
    End If
    
        
    If (Not blExist) Then
      wd.FindNext crt
      fin = wd.NoMatch
    Else
      fin = True
    End If
  Wend
  
   
    
  uit.AddNew
  uit("datum") = inv("datum")
  uit("beschrijving") = inv("soort")
  uit("plaats") = inv("plaats")
  uit("baanlengte") = inv("baan")
  If (blExist) Then
    uit("def_toevoegen") = False
    uit("def_matching_wed_nr") = mwd
  Else
    uit("def_matching_wed_nr") = Null
    uit("def_toevoegen") = True
  End If
  
  
  uit.Update
  
  
  inv.MoveNext
Loop

'Hier formulier openen.
If (blShowWedForm) Then
  DoCmd.OpenForm "~imp_tijden_wed_form"
End If



SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
import_nieuw_tijden_from_was2005_wed_phase = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
Exit Function


End Function


Private Function import_nieuw_tijden_from_was2005_td_phase() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_td_phase = False

'Nu moeten we afhandelen welke tijden er toegevoegd moeten worden.


Dim sql As String
sql = "Update hsoWAS_XML_KRTY_IN set inlees_toevoegen = false, inlees_startnr_bekend = false;"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True

sql = "UPDATE hsoWAS_XML_KRTY_IN INNER JOIN [~imp_tijden_was2005_zwemmers] ON hsoWAS_XML_KRTY_IN.startno = " & _
      "[~imp_tijden_was2005_zwemmers].was_startnummer SET hsoWAS_XML_KRTY_IN.inlees_toevoegen = True " & _
      "WHERE ((([~imp_tijden_was2005_zwemmers].importeren)=True));"

DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True

sql = "UPDATE hsoWAS_XML_KRTY_IN INNER JOIN [~imp_tijden_was2005_zwemmers] ON hsoWAS_XML_KRTY_IN.startno = " & _
      "[~imp_tijden_was2005_zwemmers].was_startnummer SET hsoWAS_XML_KRTY_IN.inlees_startnr_bekend = True " & _
      "WHERE ((([~imp_tijden_was2005_zwemmers].bekend)=True));"
      
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True
      

sql = "SELECT *, tijd_from_was([tijd]) as td, slag_from_was([slag]) as sl FROM hsoWAS_XML_KRTY_IN where [inlees_toevoegen] = true order by [startno], slag_from_was([slag]), [afstand], tijd_from_was([tijd]), [datum], [baan];"


Dim geg As Recordset
Set geg = CurrentDb().OpenRecordset(sql, dbOpenDynaset)


'sql = "SELECT [dtTijden].[Start nr], [dtTijden].Tijd, " & _
'      "[dtTijden].[Diskw code], [dtTijden].Afstand, [dtTijden].Slag, " & _
'      "[dtWedstrijden].Datum, [dtWedstrijden].Baanlengte " & _
'      "FROM ([dtWedstrijden] INNER JOIN [dtTijden] ON [dtWedstrijden].[Wedstrijd nummer] " & _
'      "= [dtTijden].[Wedstr nr]) INNER JOIN [~imp_tijden_was2005_zwemmers] ON " & _
'      "[dtTijden].[Start nr] = [~imp_tijden_was2005_zwemmers].startnummer " & _
'      "WHERE ((([~imp_tijden_was2005_zwemmers].importeren)=True)) " & _
'      "ORDER BY [start nr], [slag], val([afstand]), [tijd], [datum] "

Dim td As Recordset
'Set td = CurrentDb().OpenRecordset(sql, dbOpenDynaset)

SysCmd acSysCmdSetStatus, "Bezig met analyseren nieuwe tijden."




Dim st As String
Dim sl As String, af As String
Dim ttd As Double
Dim bn As Integer
Dim dat

Dim blInsert As Boolean


geg.MoveFirst
'td.MoveFirst

Dim curStart As String
curStart = " "

Dim blHasTijden As Boolean

Do Until geg.EOF
  st = Nz(startnr_from_was(geg("startno")))
  If (st <> curStart) Then
    
 

    If Nz(geg("Inlees_startnr_bekend"), False) Then
        Dim sqlperswim As String
        sqlperswim = "SELECT [dtTijden].*, [dtWedstrijden].Datum, [dtWedstrijden].Baanlengte " & _
        "FROM [dtWedstrijden] INNER JOIN [dtTijden] ON " & _
        "[dtWedstrijden].[Wedstrijd nummer] = [dtTijden].[Wedstr nr] " & _
        "WHERE ([start nr]=""" & st & """)" & _
        "ORDER BY [dtTijden].Slag, Val([Afstand]), [dtTijden].Tijd, [dtWedstrijden].Datum, [dtWedstrijden].Baanlengte;"
        
        Set td = CurrentDb().OpenRecordset(sqlperswim)
        td.FindFirst "[start nr]=""" & st & """"
        blHasTijden = Not td.NoMatch
        curStart = st
        If (blHasTijden) Then
          td.MovePrevious
        End If
    End If
  End If
  ttd = Nz(tijd_from_was(geg("tijd")), 0)
  sl = Nz(slag_from_was(geg("slag")))
  af = Nz(geg("afstand"))
  bn = Nz(geg("baan"))
  dat = Nz(geg("datum"), #1/1/1900#)
  
  'check to see if time is already registered.
  
  If Not geg("inlees_startnr_bekend") Or (Not blHasTijden) Then
    blInsert = (ttd > 0.01)
  ElseIf (ttd > 0.01) Then
    Dim BM
    Dim blAtBegin As Boolean
    
    blAtBegin = td.BOF
    If Not blAtBegin Then
      BM = td.Bookmark
    End If
    'Problem with "," tijden, therefore use lenFormatResLim
    Dim crit As String
    crit = "[start nr] = """ & st & """ and abs([tijd] - " & lenFormatResLim(ttd) & ") < 0.0001 and [slag] = """ & _
    sl & """ and [afstand] = """ & af & """ and [baanlengte]=" & bn & _
    " and [datum] = #" & Format(dat, "mm\-dd\-yyyy") & "#"
    If blAtBegin Then
      td.FindFirst crit
    Else
      td.FindNext crit
    End If
    blInsert = td.NoMatch
    If (td.NoMatch) Then
      'restore bookmark
      If blAtBegin Then
        td.MoveFirst
        td.MovePrevious
      Else
        td.Bookmark = BM
      End If
    End If
  Else
    blInsert = False
  End If
  
  If Not blInsert Then
    'hoeven de tijd niet toe te voegen in ons bestand.
    geg.Edit
    geg("inlees_toevoegen") = False
    geg.Update
  Else
    'Debug.Print "BOE"
  End If
  
  geg.MoveNext
Loop



SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
import_nieuw_tijden_from_was2005_td_phase = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16

SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True


'On Error GoTo 0
'Resume

Exit Function


End Function


Public Function import_zwemmers_from_was2005_cleanup() As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_cleanup = False

If Not import_zwemmers_from_was2005_cleanup_phase() Then
  Exit Function
End If

import_zwemmers_from_was2005_cleanup = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
End Function


Private Function import_zwemmers_from_was2005_cleanup_phase() As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_cleanup_phase = False

DoCmd.DeleteObject acTable, "__was2005_zwemmers_inlees"

DoCmd.SetWarnings False
Dim sql As String
sql = "delete * from [~imp_zwemmers_was2005];"
DoCmd.RunSQL sql

sql = "delete * from [~imp_zwemmers_was2005_vers];"
DoCmd.RunSQL sql


DoCmd.SetWarnings True

import_zwemmers_from_was2005_cleanup_phase = True
Exit Function
fout:
If (Err = 3011 Or Err = 7874) Then
  Resume Next
End If
MsgBox Err & " " & Error$, 16
DoCmd.SetWarnings True
Exit Function




End Function



Public Function import_nieuw_tijden_from_was2005_cleanup() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_cleanup = False

If Not import_nieuw_tijden_from_was2005_cleanup_phase() Then
  Exit Function
End If

import_nieuw_tijden_from_was2005_cleanup = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function

Private Function import_nieuw_tijden_from_was2005_cleanup_phase() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_cleanup_phase = False

'Nu moeten we alles verwijderen.


DoCmd.SetWarnings False
Dim sql As String
sql = "Delete * from  [hsoWAS_XML_KRTY_IN];"
DoCmd.RunSQL sql


sql = "Delete * from [~imp_tijden_was2005_vers];"
DoCmd.RunSQL sql


sql = "Delete * from [~imp_tijden_was2005_zwemmers];"
DoCmd.RunSQL sql

sql = "Delete * from [~imp_tijden_was2005_wedstrijden];"
DoCmd.RunSQL sql

DoCmd.SetWarnings True

import_nieuw_tijden_from_was2005_cleanup_phase = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
DoCmd.SetWarnings True
Exit Function


End Function

Private Function import_glb_from_was2005_verwerk_phase_vers(ByVal impVersTableName As String) As Boolean
On Error GoTo fout
import_glb_from_was2005_verwerk_phase_vers = False


Dim blIsMultiVer As Boolean

blIsMultiVer = dbIsMultipleVer()

'Nu moeten we alles verwerken.

'Eerst de nieuwe verenigingen toevoegen.
If (blIsMultiVer) Then

  'First calculate maxcode.
  Dim maxVerCodeNr As Long
  maxVerCodeNr = Nz(DMax("val(nz([V_afkorting]))", "dtVerenigingen"))


  Dim inpVers As Recordset
  Set inpVers = CurrentDb().OpenRecordset("select * from [" & impVersTableName & "] where [importeren] = true;")
  
  Dim outVers As Recordset
  Set outVers = CurrentDb().OpenRecordset("dtVerenigingen")
  
  outVers.Index = "PrimaryKey"
  
  inpVers.MoveFirst
  Do Until inpVers.EOF
    Dim tpWasNaam As String
    Dim tpDep As String
    Dim tpImpNaam As String
    Dim tpImpCode As String
    tpWasNaam = Nz(inpVers("wasNaam"))
    tpDep = Nz(inpVers("WasDepot"))
    tpImpNaam = Nz(inpVers("impNaam"))
    tpImpCode = Nz(inpVers("impCode"))
    
    If (tpImpNaam = "") Then
      'tpWasNaam is gauranteed to be non-empty
      tpImpNaam = tpWasNaam
    End If
    
    outVers.Index = "PrimaryKey"
    outVers.Seek "=", tpImpNaam
    
    If (outVers.NoMatch) Then
      'Need to append the vereniging.
      If (tpImpCode <> "") Then
        outVers.Index = "Depot"
        outVers.Seek "=", tpImpCode
        If Not (outVers.NoMatch) Then
          'code is already in use
          tpImpCode = ""
        End If
      End If
      
      
      If (tpImpCode = "") Then
        'need to generate a new code.
        maxVerCodeNr = maxVerCodeNr + 1
        If (maxVerCodeNr > 999) Then
          Err.Raise 1, , "Onvoldoende vrije numerieke verenigingsafkortingen over. Schoon het verenigingsbestand op."
        End If
        tpImpCode = Format(maxVerCodeNr, "000")
      End If
      
      
      outVers.AddNew
      outVers("V_Naam") = hzn(tpImpNaam)
      outVers("V_Afkorting") = hzn(tpImpCode)
      outVers("V_Depotnummer") = hzn(tpDep)
      outVers.Update
      
    
    
    End If
  
    inpVers.MoveNext
  Loop
End If



import_glb_from_was2005_verwerk_phase_vers = True
Exit Function
fout:
If (Err = 3021) Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
Exit Function
End Function



Private Function import_zwemmers_from_was2005_verwerk_phase_vers() As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_verwerk_phase_vers = False

If Not import_glb_from_was2005_verwerk_phase_vers("~imp_zwemmers_was2005_vers") Then
  Exit Function
End If

import_zwemmers_from_was2005_verwerk_phase_vers = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function

'debug
On Error GoTo 0
Resume Next
End Function


Public Function import_zwemmers_from_was2005_verwerk_phase() As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_verwerk_phase = False

SysCmd acSysCmdSetStatus, "Bezig met toevoegen nieuwe gegevens"

Dim blIsMultiVer As Boolean

blIsMultiVer = dbIsMultipleVer()

'Nu moeten we alles verwerken.
'Eerst verenigingen

If Not import_zwemmers_from_was2005_verwerk_phase_vers() Then
  Exit Function
End If

'Nu moeten we alles verwerken.
'Eerst de nieuwe zwemmers toevoegen.

Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [dtLeden];", dbOpenDynaset)

Dim geg As Recordset
Set geg = CurrentDb().OpenRecordset("Select * from [~imp_zwemmers_was2005] " & _
    "where [importeren] = true;", dbOpenDynaset)
    
geg.MoveFirst
Do Until geg.EOF
  Dim blExists As Boolean
  blExists = Nz(geg("bekend"), False)
  
  If (Not blExists) Then


    uit.AddNew
      uit("startnummer") = geg("startnummer")
      uit("actief lid") = True
      uit("geslacht") = geg("geslacht")
      uit("Voornaam") = geg("voornaam")
      uit("Voegsel") = geg("Voegsel")
      uit("achternaam") = geg("achternaam")
      uit("adres") = geg("adres")
      uit("telefoon nummer") = geg("telefoonnummer")
      uit("plaats") = geg("Plaats")
      uit("geboortedatum") = geg("geboortedatum")
      uit("geboorte jaar") = CInt(val(Left(stnrExpand(Nz(geg("startnummer"))), 4)))
      uit("postcode") = geg("Postcode")
      uit("email") = geg("email")
      
      If (blIsMultiVer) Then
        uit("vereniging") = geg("vereniging")
      End If
      
      
    uit.Update
  
  Else
    'Find it And update it
    Dim startnr As String
    startnr = Nz(geg("startnummer"))
    uit.FindFirst "[startnummer]=""" & startnr & """"
    
    If uit.NoMatch Then
      Err.Raise 1, 1, "Something's wrong! Could not find swimmer: " & startnr
    Else
    
      Dim blOvwAlways As Boolean
      blOvwAlways = False
    
        uit.Edit
      'uit("startnummer") = geg("startnummer")
      'uit("actief lid") = True
      'uit("geslacht") = geg("geslacht")
      uit("Voornaam") = geg("voornaam")
      uit("Voegsel") = geg("Voegsel")
      uit("achternaam") = geg("achternaam")
      
      If (Nz(geg("adres")) <> "") And (blOvwAlways Or (Nz(uit("adres")) = "")) Then
        uit("adres") = geg("adres")
      End If
      If (Nz(geg("telefoonnummer")) <> "") And (blOvwAlways Or (Nz(uit("telefoon nummer")) = "")) Then
        uit("telefoon nummer") = geg("telefoonnummer")
      End If
      If (Nz(geg("plaats")) <> "") And (blOvwAlways Or Nz(uit("Plaats")) = "") Then
        uit("plaats") = geg("Plaats")
      End If
      If (Not IsNull(geg("geboortedatum"))) And (blOvwAlways Or IsNull(uit("geboortedatum"))) Then
         uit("geboortedatum") = geg("geboortedatum")
      End If
      uit("geboorte jaar") = CInt(val(Left(stnrExpand(Nz(geg("startnummer"))), 4)))
      If (Nz(geg("postcode")) <> "") And (blOvwAlways Or Nz(uit("Postcode")) = "") Then
        uit("postcode") = geg("Postcode")
      End If
      If (Nz(geg("email")) <> "") And (blOvwAlways Or Nz(uit("email")) = "") Then
        uit("email") = geg("email")
      End If
      
      'Choice: do not update vereniging here.
      
      
    uit.Update
    
    
    End If
    
  End If
  geg.MoveNext
Loop

SysCmd acSysCmdClearStatus


import_zwemmers_from_was2005_verwerk_phase = True
Exit Function
fout:
If (Err = 3021) Then Resume Next

SysCmd acSysCmdClearStatus
MsgBox Err & " " & Error$, 16



Exit Function

End Function




Private Function import_nieuw_tijden_from_was2005_verwerk_phase_vers() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_verwerk_phase_vers = False

If Not import_glb_from_was2005_verwerk_phase_vers("~imp_tijden_was2005_vers") Then
  Exit Function
End If

import_nieuw_tijden_from_was2005_verwerk_phase_vers = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function

'debug
On Error GoTo 0
Resume Next
End Function


Public Function import_nieuw_tijden_from_was2005_verwerk_phase() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_verwerk_phase = False


SysCmd acSysCmdSetStatus, "Bezig met toevoegen nieuwe gegevens"

Dim blIsMultiVer As Boolean

blIsMultiVer = dbIsMultipleVer()

'Nu moeten we alles verwerken.
'Eerst verenigingen

If Not import_nieuw_tijden_from_was2005_verwerk_phase_vers() Then
  Exit Function
End If

'Eerst de nieuwe zwemmers toevoegen.

Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [dtLeden];", dbOpenDynaset)

Dim geg As Recordset
Set geg = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_zwemmers] " & _
    "where [importeren] = true and [bekend] = false;")
    
geg.MoveFirst
Do Until geg.EOF
  uit.AddNew
    uit("startnummer") = geg("startnummer")
    uit("actief lid") = True
    uit("geslacht") = geg("geslacht")
    uit("Voornaam") = geg("voornaam")
    uit("Voegsel") = geg("Voegsel")
    uit("achternaam") = geg("achternaam")
    
    If (blIsMultiVer) Then
      uit("vereniging") = geg("vereniging")
    End If
    
  uit.Update
  geg.MoveNext
Loop

'mod jan 2009: change vereniging status of existing swimmers.
appCleanRS uit
appCleanRS geg


If (blIsMultiVer) Then
  Dim skZwm As Recordset
  Set skZwm = CurrentDb().OpenRecordset("dtLeden")
  skZwm.Index = "PrimaryKey"
  
  Set geg = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_zwemmers] " & _
      "where [importeren] = true and [bekend] = true;")
      
  geg.MoveFirst
  Do Until geg.EOF
    Dim tpStart As String
    tpStart = Nz(geg("startnummer"))
    skZwm.Seek "=", tpStart
    If (Not skZwm.NoMatch) Then
      Dim tpVer As String
      tpVer = Nz(geg("vereniging"))
      If (tpVer <> Nz(skZwm("vereniging"))) Then
        skZwm.Edit
          skZwm("vereniging") = geg("vereniging")
        skZwm.Update
      End If
    End If
    geg.MoveNext
  Loop
  appCleanRS skZwm
  appCleanRS geg
End If



'Nu de nieuwe wedstrijden toevoegen.
Set geg = CurrentDb().OpenRecordset("Select * from [~imp_tijden_was2005_wedstrijden];")
Set uit = CurrentDb().OpenRecordset("Select * from [dtWedstrijden];")


Dim maxWedNr As Long
maxWedNr = DMax("[Wedstrijd nummer]", "dtWedstrijden", "[wedstrijd nummer]  < 1905000")
maxWedNr = maxWedNr + 1



Dim defwnr As Long
geg.MoveFirst
Do Until geg.EOF

  defwnr = -1
  If (Nz(geg("def_toevoegen")) Or Nz(geg("def_matching_wed_nr"), -1) = -1) Then
    'Have to insert the wedstrijd into the wedstrijden table.
    defwnr = maxWedNr
    maxWedNr = maxWedNr + 1
        
    uit.AddNew
      uit("Wedstrijd nummer") = defwnr
      uit("datum") = geg("datum")
      uit("beschrijving") = geg("Beschrijving")
      uit("plaats") = geg("Plaats")
      uit("baanlengte") = geg("baanlengte")
      uit("seizoen") = hzn(ssGetSeason(Nz(geg("datum"), #1/1/1900#)))
    uit.Update

  Else
     defwnr = Nz(geg("def_matching_wed_nr"), -1)
  End If
  
  If (defwnr = -1) Then
    MsgBox "Onverwachte fout opgetreden bij het verwerken van de wedstrijden.", 16
    Exit Function
  End If
  
  geg.Edit
  geg("def_final_wed_nr") = defwnr
  'Need to prevent bugs due to <Soort / beschrijving> being NULL or ""
  If (Nz(geg("Beschrijving")) = "") Then
    geg("Beschrijving") = "<Onbekend>"
  End If
  geg.Update

  geg.MoveNext
Loop

Dim sql As String
'Need to prevent bugs due to <Soort / beschrijving> being NULL or ""

sql = "update hsoWAS_XML_KRTY_IN set soort=""<Onbekend>"" where nz([soort]) = """"; "
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True





'Now insert all the times.
sql = "SELECT startnr_from_was([startno]) AS st, slag_from_was([slag]) AS sl, hsoWAS_XML_KRTY_IN.afstand AS af, " & _
     "tijd_from_was([tijd]) AS td, [~imp_tijden_was2005_wedstrijden].Def_final_wed_nr, " & _
     "hsoWAS_XML_KRTY_IN.dis FROM hsoWAS_XML_KRTY_IN INNER JOIN [~imp_tijden_was2005_wedstrijden] " & _
     "ON (hsoWAS_XML_KRTY_IN.baan = [~imp_tijden_was2005_wedstrijden].Baanlengte) AND " & _
     "(hsoWAS_XML_KRTY_IN.soort = [~imp_tijden_was2005_wedstrijden].Beschrijving) AND " & _
     "(hsoWAS_XML_KRTY_IN.plaats = [~imp_tijden_was2005_wedstrijden].Plaats) AND " & _
     "(hsoWAS_XML_KRTY_IN.datum = [~imp_tijden_was2005_wedstrijden].Datum) " & _
     "WHERE (((hsoWAS_XML_KRTY_IN.inlees_toevoegen)=True));"

Set geg = CurrentDb().OpenRecordset(sql, dbOpenDynaset)
Set uit = CurrentDb().OpenRecordset("Select * from [dtTijden];", dbOpenDynaset)

geg.MoveFirst
Dim blSkip As Boolean
Do Until geg.EOF
  blSkip = False
  If (Nz(geg("af")) = "") Then
    blSkip = True
  End If
  If (Nz(geg("sl")) = "") Then
    blSkip = True
  End If
  If (Nz(geg("td"), 0) < 1) Then
    blSkip = True
  End If
  Dim tpDis As String
   
  If (Not blSkip) Then
    uit.AddNew
      uit("tijd") = hzn(geg("td"))
      
      tpDis = Nz(geg("dis"))
      If (tpDis <> "") Then
        If Not tpDis Like "VR*" And (Not tpDis Like "A*") And (Not tpDis Like "S*") And (Not tpDis Like "V*") And (Not tpDis Like "W*") And (Not tpDis Like "R*") Then
          tpDis = ""
        End If
        If tpDis Like "St*Zw*" Then
          tpDis = ""
        End If
      End If
        
      
      
      uit("diskw code") = hzn(tpDis)
      uit("start nr") = hzn(geg("st"))
      uit("afstand") = hzn(geg("af"))
      uit("slag") = hzn(geg("sl"))
      uit("wedstr nr") = hzn(geg("def_final_wed_nr"))
    uit.Update
  End If
  geg.MoveNext
Loop

DoCmd.SetWarnings False
'DoCmd.OpenQuery "*Categorie_Verbeteren" 'even de categorien verbeteren in dtTijden...
DoCmd.SetWarnings True

SysCmd acSysCmdClearStatus
import_nieuw_tijden_from_was2005_verwerk_phase = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True

'debug
On Error GoTo 0
Resume


Exit Function


End Function




Public Function import_zwemmers_from_was2005_post_ver_form(blShowZwForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout

import_zwemmers_from_was2005_post_ver_form = False

If Not import_zwemmers_from_was2005_zw_phase(blShowZwForm, blDefImpUnknown) Then
  import_zwemmers_from_was2005_cleanup
  Exit Function
End If

import_zwemmers_from_was2005_post_ver_form = True

Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function


Public Function import_zwemmers_from_was2005_post_zw_form() As Boolean
On Error GoTo fout

import_zwemmers_from_was2005_post_zw_form = False

notifyGlobalChange


If Not import_zwemmers_from_was2005_verwerk_phase() Then
  import_zwemmers_from_was2005_cleanup
  Exit Function
End If

If Not import_zwemmers_from_was2005_cleanup() Then
  Exit Function
End If


import_zwemmers_from_was2005_post_zw_form = True

Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function


Public Function import_nieuw_tijden_from_was2005_post_ver_form(blShowZwmForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_post_ver_form = False

If Not import_nieuw_tijden_from_was2005_zw_phase(blShowZwmForm, blDefImpUnknown) Then
  import_nieuw_tijden_from_was2005_cleanup
  Exit Function
End If


import_nieuw_tijden_from_was2005_post_ver_form = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
DoCmd.SetWarnings True
Exit Function


End Function




Public Function import_nieuw_tijden_from_was2005_post_zw_form(blShowWedForm As Boolean) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_post_zw_form = False

If Not import_nieuw_tijden_from_was2005_td_phase() Then
  import_nieuw_tijden_from_was2005_cleanup
  Exit Function
End If

If Not import_nieuw_tijden_from_was2005_wed_phase(blShowWedForm) Then
  import_nieuw_tijden_from_was2005_cleanup
  Exit Function
End If





import_nieuw_tijden_from_was2005_post_zw_form = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
DoCmd.SetWarnings True
Exit Function


End Function

Public Function import_nieuw_tijden_from_was2005_post_wed_form() As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_post_wed_form = False

notifyGlobalChange


If Not import_nieuw_tijden_from_was2005_verwerk_phase() Then
  import_nieuw_tijden_from_was2005_cleanup
  Exit Function
End If

If Not import_nieuw_tijden_from_was2005_cleanup() Then
  Exit Function
End If





import_nieuw_tijden_from_was2005_post_wed_form = True
Exit Function
fout:

If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
DoCmd.SetWarnings True
Exit Function


End Function



Public Function import_nieuw_tijden_from_was2005() As Boolean
On Error GoTo fout

import_nieuw_tijden_from_was2005 = False

'Eerst alle wedstrijden binnenhalen
Dim backup_file As String

If Not fileNamePromptUser(FILE_DLG_OPEN, "Splash/Was gegevens inlezen ", "Splash Team-Manager backup (*.zip)|*.zip|Kringtijden bestanden (*.xml)|*.xml", backup_file, True, True) Then
  Exit Function
End If

If Not import_nieuw_tijden_from_was2005_perform(backup_file, True, False, False, #1/1/1900#) Then
  Exit Function
End If

import_nieuw_tijden_from_was2005 = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16

End Function

Public Function import_nieuw_tijden_from_was2005_perform(ByVal fName As String, blOpenVerForm As Boolean, blDefImpUnknown As Boolean, blUseDateCrit As Boolean, minDate As Date) As Boolean
On Error GoTo fout
import_nieuw_tijden_from_was2005_perform = False

If Not import_nieuw_tijden_from_was2005_read_phase(fName, blUseDateCrit, minDate) Then
  Exit Function
End If

If Not import_nieuw_tijden_from_was2005_ver_phase(blOpenVerForm, blDefImpUnknown) Then
  import_nieuw_tijden_from_was2005_cleanup
  Exit Function
End If


import_nieuw_tijden_from_was2005_perform = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function




Public Function import_zwemmers_from_was2005() As Boolean
On Error GoTo fout

import_zwemmers_from_was2005 = False

'Eerst alle wedstrijden binnenhalen
Dim backup_file As String

If Not fileNamePromptUser(FILE_DLG_OPEN, "Zwemmer bestand ", "Splash Team-Manager backup (*.zip)|*.zip|Was2005 zwemmer bestanden (zwemmer.dbf)|*.dbf", backup_file, True, True) Then
  Exit Function
End If

If Not import_zwemmers_from_was2005_perform(backup_file, True, False) Then
  Exit Function
End If

import_zwemmers_from_was2005 = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16

End Function



Private Function import_zwemmers_from_was2005_zw_phase(blOpenZwForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_zw_phase = False


'Nu moeten we afhandelen welke deelnemers er toegevoegd gaan worden.

Dim sql As String
sql = "Delete * from [~imp_zwemmers_was2005];"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True

SysCmd acSysCmdSetStatus, "Bezig met analyseren zwemmers."


Dim inpVer As Recordset
Set inpVer = CurrentDb().OpenRecordset("~imp_zwemmers_was2005_vers")
inpVer.Index = "PrimaryKey"




Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [~imp_zwemmers_was2005];", dbOpenDynaset)

sql = "SELECT first(depotno) AS VER, startnr_from_was(nz([startno])) AS st, First(voorn) AS vn, " & _
      "First(achtern) AS an, First(tusvoegsel) AS vg, " & _
      "First([__was2005_zwemmers_inlees].mj) AS mj, " & _
      "First(gebdat) as gbd, first(telefoon) as tel, first(adres) as ad, " & _
      "First(huisno) as hsn, first(postcode) as pc, first(woonplaats) as pl, " & _
      "First(email) as em, first(depotno) as dep FROM __was2005_zwemmers_inlees GROUP BY startnr_from_was(nz([startno]));"
Dim inv As Recordset
Set inv = CurrentDb().OpenRecordset(sql)

Dim ld As Recordset
Set ld = CurrentDb().OpenRecordset("Select * from [dtLeden]")

Dim st As String
Dim blExist As Boolean
inv.MoveFirst
Do Until inv.EOF


  Dim blProcess As Boolean
  blProcess = True
  
  Dim impVerName As String
  impVerName = ""
  


  Dim tpDep As String
  Dim tpVer As String
  
  tpDep = Nz(inv("DEP"))
  tpVer = Nz(inv("VER"))
  
  If (tpDep = "") Or (tpVer = "") Then
    tpDep = "00-xxx"
    tpVer = "Onbekend"
  End If
  
  inpVer.Seek "=", tpDep, tpVer
  If inpVer.NoMatch Then
    Err.Raise 1, , "Internal error. Could not find verenigingsdata to import."
  End If
  
  If (Not inpVer("importeren")) Then
    blProcess = False
  Else
    impVerName = Nz(inpVer("impNaam"))
    If (impVerName = "") Then
      impVerName = Nz(inpVer("wasNaam"))
    End If
  End If
  
  
  'modification feb 2007. Do not care about empty crap.
  st = Nz(inv("st"))
  If (st = "") Then
    blProcess = False
  End If
    

  If (blProcess) Then



    st = Nz(inv("st"))
    Dim depNr As String
    depNr = Nz(inv("dep"))
    ld.FindFirst "[startnummer]=""" & st & """"
    blExist = Not ld.NoMatch
    
    uit.AddNew
    uit("startnummer") = inv("st")
    uit("was_startnummer") = startnr_to_was(st)
    uit("voornaam") = inv("vn")
    uit("voegsel") = inv("vg")
    uit("achternaam") = inv("an")
    uit("geslacht") = ges_from_was(Nz(inv("mj")))
    uit("bekend") = blExist
    uit("importeren") = blExist Or (depNr = depot())
    
    Dim gebDatS As String
    gebDatS = Nz(inv("gbd"))
    Dim dat As Date
    dat = wasParseDate(gebDatS)
    If (lenDateIsValid(dat)) Then
      uit("geboortedatum") = dat
    Else
      uit("geboortedatum") = Null
    End If
    
    uit("telefoonnummer") = inv("tel")
    If (Nz(inv("ad")) = "" And Nz(inv("hsn")) = "") Then
      uit("adres") = Null
    Else
      uit("adres") = Nz(inv("ad")) & " " & Nz(inv("hsn"))
    End If
    uit("postcode") = inv("pc")
    uit("plaats") = inv("pl")
    uit("email") = inv("em")
    uit("depotnummer") = inv("dep")
    
    uit("vereniging") = hzn(impVerName)
   
  
    uit.Update
  End If ' if blprocess
  
  
  inv.MoveNext
Loop

'Hier formulier openen.


If (blOpenZwForm) Then
  DoCmd.OpenForm "~imp_zwemmers_form"
End If




'DoCmd.DeleteObject acTable, "__was2005_zwemmers_inlees"
SysCmd acSysCmdClearStatus


import_zwemmers_from_was2005_zw_phase = True
Exit Function
fout:
If (Err = 3021) Then Resume Next ' no current recor
SysCmd acSysCmdClearStatus
MsgBox Err & " " & Error$, 16
Exit Function

On Error GoTo 0
Resume Next
End Function

Private Function import_zwemmers_from_was2005_ver_phase(blOpenVerForm As Boolean, blDefImpUnknown As Boolean) As Boolean
On Error GoTo fout
import_zwemmers_from_was2005_ver_phase = False

'Nu moeten we afhandelen welke verenigingen er toegevoegd gaan worden.

Dim sql As String
sql = "Delete * from [~imp_zwemmers_was2005_vers];"
DoCmd.SetWarnings False
DoCmd.RunSQL sql
DoCmd.SetWarnings True



SysCmd acSysCmdSetStatus, "Bezig met analyseren verenigingen."



Dim uit As Recordset
Set uit = CurrentDb().OpenRecordset("Select * from [~imp_zwemmers_was2005_vers];", dbOpenDynaset)


sql = "SELECT [__was2005_zwemmers_inlees].depotno as VER, [__was2005_zwemmers_inlees].depotno as DEP FROM [__was2005_zwemmers_inlees] " & _
      "GROUP BY [__was2005_zwemmers_inlees].depotno;"

Dim inv As Recordset
Set inv = CurrentDb().OpenRecordset(sql)

If Not import_glb_from_was2005_handle_ver(inv, uit, blDefImpUnknown) Then
  Exit Function
End If



SysCmd acSysCmdClearStatus

'Hier formulier openen.
If (blOpenVerForm) Then
  DoCmd.OpenForm "~imp_zwemmers_ver_form"
End If




DoCmd.SetWarnings True
import_zwemmers_from_was2005_ver_phase = True
Exit Function
fout:
If Err = 3021 Then Resume Next ' no current record.
MsgBox Err & " " & Error$, 16
SysCmd acSysCmdClearStatus
DoCmd.SetWarnings True
Exit Function


On Error GoTo 0
Resume

End Function



Public Function import_zwemmers_from_was2005_perform(ByVal backup_file As String, blShowVerForm As Boolean, blDefImpUnknownVers As Boolean) As Boolean
On Error GoTo fout

import_zwemmers_from_was2005_perform = False

If Not import_zwemmers_from_was2005_read_phase(backup_file) Then
  Exit Function
End If

If Not import_zwemmers_from_was2005_ver_phase(blShowVerForm, blDefImpUnknownVers) Then
  Exit Function
End If

import_zwemmers_from_was2005_perform = True
Exit Function
fout:
MsgBox Err & " " & Error$, 16
Exit Function
End Function



Public Function isPlaatsMatch(pla As String, plB As String) As Boolean
On Error Resume Next
isPlaatsMatch = False

If Left(pla, 5) = Left(plB, 5) Then
  isPlaatsMatch = True
End If
End Function

Public Function isBesMatch(besA As String, besB As String) As Boolean
On Error Resume Next
isBesMatch = False
If (besA = besB) Then
  isBesMatch = True
  Exit Function
End If
'TODO: Need to do better here.
isBesMatch = (normalizeBeschrijving(besA) = normalizeBeschrijving(besB))

End Function

Public Function normalizeBeschrijving(ByVal bes As String) As String
On Error Resume Next
normalizeBeschrijving = ""
Dim tpS As String
tpS = extractToken(bes, " ")
While tpS <> ""
  normalizeBeschrijving = normalizeBeschrijving & normalizeBesToken(tpS)
  tpS = extractToken(bes, " ")
Wend

End Function

Public Function charsOnly(tok As String) As String
On Error Resume Next
charsOnly = ""
Dim i As Integer
Dim tpChar As String
Dim tpAsc As Integer
Dim isOK As Boolean
For i = 1 To Len(tok)
  tpChar = Mid(tok, i, 1)
  tpAsc = Asc(tpChar)
  isOK = False
  If tpAsc >= Asc("A") And tpAsc <= Asc("Z") Then
    isOK = True
  End If
  If (Not isOK) And tpAsc >= Asc("a") And tpAsc <= Asc("z") Then
    isOK = True
  End If
  If (Not isOK) And tpAsc >= Asc("0") And tpAsc <= Asc("9") Then
    isOK = True
  End If
  If isOK Then
    charsOnly = charsOnly & tpChar
  End If
Next i

End Function

Public Function normalizeBesToken(tok As String) As String
On Error Resume Next
'Should normalize a beschrijving token.
tok = charsOnly(tok)
If tok Like "Ver*Comp*" Then
  tok = "VERENIGINGSCOMPETITIE"
ElseIf tok Like "VC" Then
  tok = "VERENIGINGSCOMPETITIE"
ElseIf tok Like "Ver*" Then
  tok = "VERENIGINGS"
ElseIf tok Like "Comp*" Then
  tok = "COMPETITIE"
ElseIf tok Like "deel" Then
  tok = "DEEL"
ElseIf tok Like "dl" Then
  tok = "DEEL"
ElseIf tok Like "Nat*Kamp*" Then
  tok = "NATIONALEKAMPIOENSCHAPPEN"
ElseIf tok Like "Nat*" Then
  tok = "NATIONALE"
ElseIf tok Like "Kamp*" Then
  tok = "KAMPIOENSCHAPPEN"
ElseIf tok Like "NK*" Then
  tok = "NATIONALEKAMPIOENSCHAPPEN"
ElseIf tok Like "Jeu*" Then
  tok = "JEUGD"
ElseIf tok Like "Sen*" Then
  tok = "SENIOREN"
ElseIf tok Like "Jun*" Then
  tok = "JUNIOREN"
ElseIf tok Like "Kring*Kamp*" Then
  tok = "KRINGKAMPIOENSCHAPPEN"
ElseIf tok Like "KK" Then
  tok = "KRINGKAMPIOENSCHAPPEN"
ElseIf tok Like "Kring*" Then
  tok = "KRING"
ElseIf tok Like "KR" Then
  tok = "KRING"
ElseIf tok Like "Sp*Voor*" Then
  tok = "SPEEDOVOORRONDE"
ElseIf tok Like "SP*ins*" Then
  tok = "SPEEDOINSTROOM"
ElseIf tok Like "Sp*" Then
  tok = "SPEEDO"
ElseIf tok Like "Voor*" Then
  tok = "VOORRONDE"
ElseIf tok Like "Instr*" Then
  tok = "INSTROOM"
ElseIf tok Like "Distr*Kamp*" Then
  tok = "DISTRICTSKAMPIOENSCHAPPEN"
ElseIf tok Like "Distr*" Then
  tok = "DISTRICTS"
ElseIf tok Like "LAC*" Then
  tok = "LANGEAFSTANDSCIRCUIT"
ElseIf tok Like "Lang*Af*Cir*" Then
  tok = "LANGEAFSTANDSCIRCUIT"
ElseIf tok Like "Lang*Af*" Then
  tok = "LANGEAFSTANDS"
ElseIf tok Like "Lan*" Then
  tok = "LANGE"
ElseIf tok Like "Afst*" Then
  tok = "AFSTANDS"
ElseIf tok Like "Cir*" Then
  tok = "CIRCUIT"
ElseIf tok Like "Per*" Then
  tok = "PERIODE"
ElseIf tok Like "mt" Then
  tok = "MEET"
ElseIf tok Like "sw" Then
  tok = "SWIM"
ElseIf tok Like "gr*pr" Then
  tok = "GRANDPRIX"
ElseIf tok Like "gr" Then
  tok = "GRAND"
ElseIf tok Like "pr" Then
  tok = "PRIX"
ElseIf tok Like "fin*" Then
  tok = "FINALE"
ElseIf tok Like "Wint*" Then
  tok = "WINTER"
ElseIf tok Like "Zom*" Then
  tok = "ZOMER"
ElseIf tok Like "Lim*Wed*" Then
  tok = "LIMIETWEDSTRIJD"
ElseIf tok Like "Lim*" Then
  tok = "LIMIET"
ElseIf tok Like "Weds*" Then
  tok = "WEDSTRIJD"
End If
normalizeBesToken = tok
End Function