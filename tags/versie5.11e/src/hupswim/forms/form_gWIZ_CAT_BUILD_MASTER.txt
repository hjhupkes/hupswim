Version =20
VersionRequired =20
Checksum =482144874
Begin Form
    RecordSelectors = NotDefault
    AutoCenter = NotDefault
    NavigationButtons = NotDefault
    DividingLines = NotDefault
    DefaultView =0
    ScrollBars =0
    ViewsAllowed =1
    PictureAlignment =2
    DatasheetGridlinesBehavior =3
    GridX =24
    GridY =24
    Width =11565
    DatasheetFontHeight =10
    ItemSuffix =20
    Left =3765
    Top =1635
    Right =15330
    Bottom =7860
    DatasheetGridlinesColor =12632256
    Toolbar ="gFrmToolbar"
    RecSrcDt = Begin
        0x24c8cc2e9110e340
    End
    Caption ="Categorie samenstellen"
    OnOpen ="[Event Procedure]"
    MenuBar ="gMnBasic"
    DatasheetFontName ="Arial"
    PrtMip = Begin
        0xa0050000a0050000a0050000a005000000000000201c0000e010000001000000 ,
        0x010000006801000000000000a10700000100000001000000
    End
    PrtDevMode = Begin
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x010402059c00c40253ef800101000100ea0a6f08640001000f00580202000100 ,
        0x5802030001004c65747465720000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000010000000000000001000000 ,
        0x0200000001000000000000000000000000000000000000000000000050524956 ,
        0xe230000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000180000000000102710271027 ,
        0x0000102700000000000000000000c40200000000000000000000000000000000 ,
        0x00000000000000000300000000000000000010005c4b03006843040000000000 ,
        0x000000000000010000000000000000000000000000000000e7b14b4c03000000 ,
        0x05000400ff000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000 ,
        0x0000000000000000000000000000000000000000000000000000000000000000
    End
    PrtDevNames = Begin
        0x080013001e000100000000000000000000000000000000000000000000005044 ,
        0x4643726561746f723a00
    End
    OnResize ="[Event Procedure]"
    Begin
        Begin Label
            BackStyle =0
        End
        Begin CommandButton
            FontSize =8
            FontWeight =400
            ForeColor =-2147483630
            FontName ="MS Sans Serif"
        End
        Begin OptionButton
            SpecialEffect =2
            LabelX =230
            LabelY =-30
        End
        Begin OptionGroup
            SpecialEffect =3
        End
        Begin TextBox
            SpecialEffect =2
            OldBorderStyle =0
        End
        Begin Subform
            SpecialEffect =2
        End
        Begin FormHeader
            Height =600
            BackColor =-2147483633
            Name ="FormHeader"
            Begin
                Begin Label
                    OverlapFlags =85
                    TextAlign =2
                    Left =-60
                    Top =120
                    Width =11625
                    Height =345
                    FontSize =12
                    FontWeight =700
                    Name ="Label0"
                    Caption ="Systematische categorie code samenstellen"
                End
            End
        End
        Begin Section
            CanGrow = NotDefault
            Height =5166
            BackColor =-2147483633
            Name ="Detail"
            Begin
                Begin Subform
                    OverlapFlags =85
                    OldBorderStyle =0
                    SpecialEffect =0
                    Width =11528
                    Height =5166
                    BorderColor =4210752
                    Name ="subfrm"
                End
            End
        End
        Begin FormFooter
            Height =480
            BackColor =-2147483633
            Name ="FormFooter"
            Begin
                Begin CommandButton
                    OverlapFlags =85
                    AccessKey =78
                    Left =8000
                    Top =60
                    Width =1206
                    Height =343
                    FontSize =10
                    FontWeight =700
                    Name ="btnNxt"
                    Caption ="&Next"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =85
                    AccessKey =80
                    Left =6696
                    Top =60
                    Width =1206
                    Height =343
                    FontSize =10
                    FontWeight =700
                    TabIndex =1
                    Name ="btnPrev"
                    Caption ="&Previous"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =85
                    AccessKey =67
                    Left =120
                    Top =60
                    Width =1206
                    Height =343
                    FontSize =10
                    FontWeight =700
                    TabIndex =2
                    Name ="btnCancel"
                    Caption ="&Cancel"
                    OnClick ="[Event Procedure]"
                End
                Begin CommandButton
                    OverlapFlags =85
                    AccessKey =70
                    Left =9247
                    Top =60
                    Width =1206
                    Height =343
                    FontSize =10
                    FontWeight =700
                    TabIndex =3
                    Name ="btnFin"
                    Caption ="&Finish"
                    OnClick ="[Event Procedure]"
                End
            End
        End
    End
End
CodeBehindForm
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Compare Database
Option Explicit
Private prvFName As String

Private curPage As Integer



Private Const OPT_GES_M = 1
Private Const OPT_GES_V = 2
Private Const OPT_GES_MV = 3


Private Const OPT_LFT_NL = 1
Private Const OPT_LFT_YOB = 2
Private Const OPT_LFT_AGE = 3




Private Const PAGE_SMY_INITIAL = 0
Private Const PAGE_CHOOSE_GES = 1
Private Const PAGE_CHOOSE_LFT_TYPE = 2
Private Const PAGE_CHOOSE_LFT = 3
Private Const PAGE_SMY_FINAL = 4

Private Const PAGE_MIN = PAGE_SMY_INITIAL
Private Const PAGE_MAX = PAGE_SMY_FINAL


'Standard Wizard code version: 15-dec-2007.


Private Function buildCat(ByRef rs As Recordset) As String

buildCat = ""


Dim catParsedInfo As CAT_PARSED_INFO

Dim iGesCode As Integer
iGesCode = Nz(rs("CB_GeslachtCode"), 0)

If (iGesCode = OPT_GES_M) Then
  catParsedInfo.sGes = "M"
ElseIf (iGesCode = OPT_GES_V) Then
  catParsedInfo.sGes = "V"
Else
  catParsedInfo.sGes = "*"
End If

catParsedInfo.blIsMCat = Nz(rs("CB_IsMCat"), False)
catParsedInfo.blHasAgeRestriction = Nz(rs("CB_UseLftRestriction"), False)

If (catParsedInfo.blHasAgeRestriction) Then
  Dim iLftType As Integer
  iLftType = Nz(rs("CB_LftRestrictionType"))
  Dim blUseYng As Boolean, blUseOld As Boolean, blUseYngAsOld As Boolean
  blUseYng = Nz(rs("CB_UseYng"))
  blUseOld = Nz(rs("CB_UseOld"))
  blUseYngAsOld = Nz(rs("CB_UseYngAsOld"))
  
  If iLftType = OPT_LFT_NL Then
    catParsedInfo.blIsNLBased = True
    If (blUseYng) Then
      catParsedInfo.sYngNLCode = Nz(rs("CB_YngNLCode"), "")
    Else
      catParsedInfo.sYngNLCode = ""
    End If
    If (blUseOld) Then
      If (blUseYngAsOld) Then
        catParsedInfo.sOldNLCode = catParsedInfo.sYngNLCode
      Else
        catParsedInfo.sOldNLCode = Nz(rs("CB_OldNLCode"), "")
      End If
    Else
      catParsedInfo.sOldNLCode = ""
    End If
  ElseIf iLftType = OPT_LFT_YOB Then
    catParsedInfo.blIsYOBBased = True
    If (blUseYng) Then
      catParsedInfo.lYngYOB = Nz(rs("CB_YngYOB"), 9999)
    Else
      catParsedInfo.lYngYOB = 9999
    End If
    If (blUseOld) Then
      If (blUseYngAsOld) Then
        catParsedInfo.lOldYOB = catParsedInfo.lYngYOB
      Else
        catParsedInfo.lOldYOB = Nz(rs("CB_OldYOB"), 0)
      End If
    Else
      catParsedInfo.lOldYOB = 0
    End If
  ElseIf iLftType = OPT_LFT_AGE Then
    catParsedInfo.blIsAgeBased = True
    If (blUseYng) Then
      catParsedInfo.iYngAge = Nz(rs("CB_YngAge"), 0)
    Else
      catParsedInfo.iYngAge = 0
    End If
    If (blUseOld) Then
      If (blUseYngAsOld) Then
        catParsedInfo.iOldAge = catParsedInfo.iYngAge
      Else
        catParsedInfo.iOldAge = Nz(rs("CB_OldAge"), CAT_MAX_AGE)
      End If
    Else
      catParsedInfo.iOldAge = CAT_MAX_AGE
    End If
    catParsedInfo.blIsEstSumAges = False
    If (Nz(rs("CB_EstSumAges"), False)) Then
      catParsedInfo.blIsEstSumAges = True
    End If
  End If
End If

Dim sCat As String
sCat = ""

Dim dAgeDate As Double, sLftBep As String
dAgeDate = Nz(rs("CB_ARG_WedAgeDate"), #1/1/1900#)
sLftBep = Nz(rs("CB_ARG_WedLftMode"))

Dim blApplyNLLftRules As Boolean
blApplyNLLftRules = Nz(rs("CB_ARG_ApplyNlLftRules"))

If Not ctxBuildCat(False, blApplyNLLftRules, dAgeDate, sLftBep, catParsedInfo, sCat) Then
  Exit Function
End If

buildCat = sCat


End Function



Private Sub writeSmy(ByRef rs As Recordset, ByRef catParsedInfo As CAT_PARSED_INFO, ByRef catCompiledInfo As CAT_COMPILED_INFO)

rs.Edit

rs("CB_SMY_Categorie") = hzn(catCompiledInfo.sCat)
rs("CB_SMY_DesCategorie") = hzn(catParsedInfo.sCatDes)
rs("CB_SMY_DesMinAge") = hzn(catCompiledInfo.sAuxDesMinAge)
rs("CB_SMY_DesMaxAge") = hzn(catCompiledInfo.sAuxDesMaxAge)
rs("CB_SMY_DesAgeCalc") = hzn(catCompiledInfo.sAuxLftCalcDes)

rs.Update

End Sub

Private Sub writeSettings(ByRef rs As Recordset, ByRef catParsedInfo As CAT_PARSED_INFO)


Dim iGesCode As Integer

If (catParsedInfo.sGes = "M") Then
  iGesCode = OPT_GES_M
ElseIf (catParsedInfo.sGes = "V") Then
  iGesCode = OPT_GES_V
Else
  iGesCode = OPT_GES_MV
End If

rs.Edit

  rs("CB_GeslachtCode") = iGesCode
  rs("CB_IsMCat") = catParsedInfo.blIsMCat
  
  rs("CB_UseLftRestriction") = catParsedInfo.blHasAgeRestriction
  
  rs("CB_LftRestrictionType") = OPT_LFT_NL
  rs("CB_UseYng") = False
  rs("CB_UseOld") = False
  rs("CB_UseYngAsOld") = False
  
  rs("CB_YngAge") = Null
  rs("CB_YngNLCode") = Null
  rs("CB_YngYOB") = Null
  
  rs("CB_OldAge") = Null
  rs("CB_OldNLCode") = Null
  rs("CB_OldYOB") = Null
  
  rs("CB_EstSumAges") = False
  
  
  If (catParsedInfo.blHasAgeRestriction) Then
    If (catParsedInfo.blIsNLBased) Then
      rs("CB_LftRestrictionType") = OPT_LFT_NL
      If (catParsedInfo.sYngNLCode <> "") Then
        rs("CB_UseYng") = True
        rs("CB_YngNLCode") = hzn(catParsedInfo.sYngNLCode)
      End If
      If (catParsedInfo.sOldNLCode <> "") Then
        rs("CB_UseOld") = True
        If (catParsedInfo.sOldNLCode = catParsedInfo.sYngNLCode) Then
          rs("CB_UseYngAsOld") = True
        Else
          rs("CB_OldNLCode") = hzn(catParsedInfo.sOldNLCode)
        End If
      End If
    ElseIf (catParsedInfo.blIsYOBBased) Then
      rs("CB_LftRestrictionType") = OPT_LFT_YOB
      If (catParsedInfo.lYngYOB < 9999) Then
        rs("CB_UseYng") = True
        rs("CB_YngYOB") = catParsedInfo.lYngYOB
      End If
      If (catParsedInfo.lOldYOB > 0) Then
        rs("CB_UseOld") = True
        If (catParsedInfo.lOldYOB = catParsedInfo.lYngYOB) Then
          rs("CB_UseYngAsOld") = True
        Else
          rs("CB_OldYOG") = catParsedInfo.lOldYOB
        End If
      End If
    ElseIf (catParsedInfo.blIsAgeBased) Then
      rs("CB_LftRestrictionType") = OPT_LFT_AGE
      If (catParsedInfo.iYngAge > 0) Then
        rs("CB_UseYng") = True
        rs("CB_YngAge") = catParsedInfo.iYngAge
      End If
      If (catParsedInfo.iOldAge < CAT_MAX_AGE) Then
        rs("CB_UseOld") = True
        If (catParsedInfo.iOldAge = catParsedInfo.iYngAge) Then
          rs("CB_UseYngAsOld") = True
        Else
          rs("CB_OldAge") = catParsedInfo.iOldAge
        End If
      End If
      If (catParsedInfo.blIsEstSumAges) Then
        rs("CB_EstSumAges") = True
      End If
    End If
  End If 'if blHasAgeRestriction
  
rs.Update




End Sub


Private Function writeCat(sCat As String, ByVal blWriteSettings As Boolean, ByVal blWriteSmy As Boolean, ByRef rs As Recordset) As Boolean
On Error GoTo fout
writeCat = False


Dim dAgeDate As Date
Dim sLftBep As String
Dim blApplyNLLftRules As Boolean

dAgeDate = Nz(rs("CB_ARG_WedAgeDate"), #1/1/1900#)
sLftBep = Nz(rs("CB_ARG_WedLftMode"))
blApplyNLLftRules = Nz(rs("CB_ARG_ApplyNLLftRules"))




Dim catParsedInfo As CAT_PARSED_INFO
Dim catCompiledInfo As CAT_COMPILED_INFO

Dim blDummy As Boolean

If Not ctxParseCat(sCat, blDummy, catParsedInfo) Then
  Exit Function
End If

If Not ctxCompileCat(sCat, dAgeDate, sLftBep, blApplyNLLftRules, blDummy, catCompiledInfo) Then
  Exit Function
End If


If (blWriteSmy) Then
  writeSmy rs, catParsedInfo, catCompiledInfo
End If

If (blWriteSettings) Then
  writeSettings rs, catParsedInfo
End If






writeCat = True
Exit Function
fout:
MsgBox Err & " writeCat" & vbCrLf & Error$, 16
Exit Function
End Function

Private Function writeNewCat() As Boolean
On Error GoTo fout
writeNewCat = False


Dim rs As Recordset
Set rs = CurrentDb().OpenRecordset("gCAT_BUILD_OPTIONS")

rs.MoveFirst

If (rs.EOF) Then
  Err.Raise 1, , "Tabel gCat_BUILD_OPTIONS is onverwacht leeg"
End If


Dim sCat As String
sCat = buildCat(rs)

If Not writeCat(sCat, False, True, rs) Then
  Exit Function
End If


appCleanRS rs



writeNewCat = True
Exit Function

fout:
If (Err = 3021) Then Resume Next
MsgBox Err & " writeNewCat" & vbCrLf & Error$, 16
Exit Function
End Function


Private Function writeInitialCat() As Boolean
On Error GoTo fout
writeInitialCat = False


Dim rs As Recordset
Set rs = CurrentDb().OpenRecordset("gCAT_BUILD_OPTIONS")

rs.MoveFirst

If (rs.EOF) Then
  Err.Raise 1, , "Tabel gCat_BUILD_OPTIONS is onverwacht leeg"
End If


Dim sCat As String
sCat = Nz(rs("CB_ARG_CurCat"))

Dim blAllowMCat As Boolean
blAllowMCat = Nz(rs("CB_ARG_AllowMCat"))

If (Not blAllowMCat) And catIsMCat(sCat) Then
  sCat = ""
End If



If (sCat = "") Then
  sCat = "JSENOEL"
End If

If Not writeCat(sCat, True, True, rs) Then
  Exit Function
End If


appCleanRS rs


writeInitialCat = True
Exit Function

fout:
If (Err = 3021) Then Resume Next
MsgBox Err & " writeInitialCat" & vbCrLf & Error$, 16
Exit Function
End Function



Private Function isLftRestriction() As Boolean
On Error Resume Next
isLftRestriction = Nz(DLookup("CB_UseLftRestriction", "gCAT_BUILD_OPTIONS"))
End Function
Private Function isMCat() As Boolean
On Error Resume Next
isMCat = Nz(DLookup("CB_IsMCat", "gCAT_BUILD_OPTIONS"))
End Function
Private Function getLftType() As Integer
On Error Resume Next
getLftType = Nz(DLookup("CB_LftRestrictionType", "gCAT_BUILD_OPTIONS"))
End Function

Private Function isInitCat() As Boolean
On Error Resume Next
isInitCat = Nz(DLookup("CB_ARG_CurCat", "gCAT_BUILD_OPTIONS")) <> ""
End Function

Private Function checkAgeSettings() As Boolean
On Error Resume Next

checkAgeSettings = False

Dim iLftType As Integer
iLftType = getLftType()

Dim blUseYngAge As Boolean
blUseYngAge = Nz(DLookup("CB_UseYng", "gCAT_BUILD_OPTIONS"))

If (blUseYngAge) Then
  Select Case iLftType
    Case OPT_LFT_NL
      If (Nz(DLookup("CB_YngNLCode", "gCAT_BUILD_OPTIONS")) = "") Then
        Exit Function
      End If
    Case OPT_LFT_YOB
      If (Nz(DLookup("CB_YngYOB", "gCAT_BUILD_OPTIONS"), -1) = -1) Then
        Exit Function
      End If
    Case OPT_LFT_AGE
      If (Nz(DLookup("CB_YngAge", "gCAT_BUILD_OPTIONS"), -1) = -1) Then
        Exit Function
      End If
  End Select
End If
      
      
Dim blUseOldAge As Boolean
blUseOldAge = Nz(DLookup("CB_UseOld", "gCAT_BUILD_OPTIONS"))

If (blUseOldAge) Then
  Dim blUseYngAsOld As Boolean
  blUseYngAsOld = Nz(DLookup("CB_UseYngAsOld", "gCAT_BUILD_OPTIONS"))
  
  If (Not blUseYngAsOld) Or (Not blUseYngAge) Then
  
    Select Case iLftType
      Case OPT_LFT_NL
        If (Nz(DLookup("CB_OldNLCode", "gCAT_BUILD_OPTIONS")) = "") Then
          Exit Function
        End If
      Case OPT_LFT_YOB
        If (Nz(DLookup("CB_OldYOB", "gCAT_BUILD_OPTIONS"), -1) = -1) Then
          Exit Function
        End If
      Case OPT_LFT_AGE
        If (Nz(DLookup("CB_OldAge", "gCAT_BUILD_OPTIONS"), -1) = -1) Then
          Exit Function
        End If
    End Select
  End If
End If


checkAgeSettings = True



End Function






Private Function wzcPostPageUnload(ByVal page As Integer)
On Error Resume Next


End Function
Private Sub wzcPostFinish()
On Error Resume Next


End Sub

Private Function wzcAllowCancel(curPage As Integer) As Boolean
On Error Resume Next
wzcAllowCancel = True
End Function

Private Sub wzcPerformCancel(lstPage As Integer)
On Error Resume Next


End Sub



Private Function wzcMinPage() As Integer
On Error Resume Next
  If (isInitCat()) Then
    wzcMinPage = PAGE_MIN
  Else
    wzcMinPage = PAGE_CHOOSE_GES
  End If
End Function

Private Function wzcMaxPage() As Integer
On Error Resume Next
wzcMaxPage = PAGE_MAX
End Function


Private Sub wzcFormatButtons(curPage As Integer)
On Error GoTo fout



Dim blIsMCat As Boolean
Dim blIsLftRes As Boolean
  
blIsMCat = isMCat()
blIsLftRes = isLftRestriction()

Dim blAllowFinish As Boolean
blAllowFinish = False

If (blIsMCat Or (Not blIsLftRes)) Then
  blAllowFinish = True
Else
  'Check if lft restriction choices have been properly filled in.
  If checkAgeSettings() Then
    blAllowFinish = True
  End If
End If

If (curPage = PAGE_CHOOSE_GES) Then
  Me.btnPrev.Enabled = False
  Me.btnNxt.Enabled = True
  Me.btnFin.Enabled = blAllowFinish
ElseIf (curPage = PAGE_CHOOSE_LFT_TYPE) Then
  Me.btnNxt.Enabled = True
  Me.btnFin.Enabled = blAllowFinish
ElseIf (curPage = PAGE_CHOOSE_LFT) Then
  Me.btnNxt.Enabled = blAllowFinish
  Me.btnFin.Enabled = blAllowFinish
ElseIf (curPage = PAGE_SMY_FINAL) Then
  Me.btnNxt.Enabled = False
  Me.btnFin.Enabled = blAllowFinish
ElseIf (curPage = PAGE_SMY_INITIAL) Then
  Me.btnNxt.Enabled = True
  Me.btnFin.Enabled = blAllowFinish
End If


Exit Sub
fout:
If (Err = 2164) Then ' cannot disable a control when it has focus.
  Me.btnCancel.SetFocus
  Resume
End If

MsgBox Err & " " & Error$, 16

End Sub



Private Sub wzcInit(ByRef initPage As Integer)
On Error Resume Next

If Not writeInitialCat() Then
  Exit Sub
End If


End Sub


Private Sub wzcHandleMove(ByVal prvPage As Integer, ByRef nxtPage As Integer)
On Error GoTo fout




If (prvPage = PAGE_CHOOSE_GES) And (nxtPage = PAGE_CHOOSE_LFT_TYPE) Then
  If isMCat() Or (Not isLftRestriction()) Then
    nxtPage = PAGE_SMY_FINAL
  End If
End If

If (prvPage = PAGE_SMY_FINAL) And (nxtPage = PAGE_CHOOSE_LFT) Then
  If isMCat() Or (Not isLftRestriction()) Then
    nxtPage = PAGE_CHOOSE_GES
  End If
End If


Exit Sub
fout:
MsgBox Err & " " & Error$, 16
End Sub


Private Sub wzcPrePageLoad(ByVal curPage As Integer)
On Error Resume Next

If (curPage = PAGE_SMY_FINAL) Then
  If Not writeNewCat() Then
    Exit Sub
  End If
End If


End Sub
Private Sub wzcPostPageLoad(ByVal curPage As Integer)
On Error Resume Next

End Sub

Private Function wzcGetPageName(ByVal curPage As Integer) As String
On Error Resume Next


Select Case curPage
  Case PAGE_SMY_INITIAL
    wzcGetPageName = "gWIZ_CAT_BUILD_SMY"
  Case PAGE_CHOOSE_GES
    wzcGetPageName = "gWIZ_CAT_BUILD_GES"
  Case PAGE_CHOOSE_LFT_TYPE
    wzcGetPageName = "gWIZ_CAT_BUILD_LFT_TYPE"
  Case PAGE_CHOOSE_LFT
    Dim iLftType As Integer
    iLftType = getLftType()
    Select Case iLftType
      Case OPT_LFT_NL
        wzcGetPageName = "gWIZ_CAT_BUILD_LFT_BND_NL"
      Case OPT_LFT_YOB
        wzcGetPageName = "gWIZ_CAT_BUILD_LFT_BND_YOB"
      Case OPT_LFT_AGE
        wzcGetPageName = "gWIZ_CAT_BUILD_LFT_BND_AGE"
    End Select
  Case PAGE_SMY_FINAL
    wzcGetPageName = "gWIZ_CAT_BUILD_SMY"
End Select

End Function







Private Function wzcExitPage(pageNr As Integer, direction As Integer) As Boolean
On Error Resume Next
wzcExitPage = False




wzcExitPage = True
End Function



Private Function wzcFinish(curPage As Integer) As Boolean
On Error GoTo fout

wzcFinish = False

If Not writeNewCat() Then
  Exit Function
End If


Dim rs As Recordset
Set rs = CurrentDb().OpenRecordset("gCat_BUILD_Options")
rs.MoveFirst

If rs.EOF Then
  Err.Raise 1, , "Internal error"
End If

rs.Edit
  rs("CB_IS_OK") = True
rs.Update

appCleanRS rs


wzcFinish = True


Exit Function
fout:
If (Err = 3021) Then Resume Next
MsgBox Err & " wzcFinish" & vbCrLf & Error$, 16
Exit Function
End Function


'Standard wizard stuff.

Private Function wzbCancel() As Boolean
On Error GoTo fout

wzbCancel = False

Dim lstPage As Integer
lstPage = curPage

If Not wzcAllowCancel(curPage) Then
  Exit Function
End If

Dim closedPage As Integer
closedPage = curPage

'close the current page.
Me.subfrm.SourceObject = "WIZ_UNBOUND"
curPage = -1

wzcPostPageUnload closedPage

wzcPerformCancel lstPage
 
 wzbCancel = True
 
 Exit Function
fout:
 MsgBox Err & " " & Error$, 16
 Exit Function


End Function


'Below is just standard wizard stuff.


Private Sub btnCancel_Click()
On Error Resume Next

If (wzbCancel()) Then
  DoCmd.Close
End If

End Sub

Private Sub btnFin_Click()
On Error Resume Next
DoCmd.DoMenuItem A_FORMBAR, A_FILE, A_SAVERECORD, , A_MENU_VER20
If (wzbFinish()) Then
  DoCmd.Close
End If
End Sub

Private Sub btnNxt_Click()
On Error Resume Next
DoCmd.DoMenuItem A_FORMBAR, A_FILE, A_SAVERECORD, , A_MENU_VER20
wzbAdvance
End Sub

Private Sub btnPrev_Click()
On Error Resume Next
DoCmd.DoMenuItem A_FORMBAR, A_FILE, A_SAVERECORD, , A_MENU_VER20
wzbRetreat
End Sub

Private Sub Form_Open(Cancel As Integer)
On Error Resume Next
wzbInit
End Sub



Public Sub wzbNotifyChange()
On Error Resume Next
wzbFormatButtons
End Sub

Private Sub wzbFormatButtons()
On Error GoTo fout

Me.btnFin.Enabled = True

If curPage = wzcMinPage() Then
  Me.btnPrev.Enabled = False
Else
  Me.btnPrev.Enabled = True
End If
If curPage = wzcMaxPage() Then
  Me.btnNxt.Enabled = False
Else
  Me.btnNxt.Enabled = True
End If

wzcFormatButtons curPage

Exit Sub
fout:
If (Err = 2164) Then ' cannot disable a control when it has focus.
  Me.btnCancel.SetFocus
  Resume
End If

MsgBox Err & " " & Error$, 16
End Sub
Private Sub wzbInit()
On Error Resume Next
curPage = wzcMinPage()

wzcInit curPage

wzbDisplayCurPage
End Sub





Private Sub wzbAdvance()
On Error GoTo fout
If (curPage < wzcMaxPage()) Then
  If wzbExitPage(curPage, 1) Then
    Dim prvPage As Integer
    prvPage = curPage
    curPage = curPage + 1
    
    'Unload current page.
    Me.subfrm.SourceObject = "WIZ_UNBOUND"
    
    wzcPostPageUnload prvPage
    
    wzcHandleMove prvPage, curPage
    
    wzbDisplayCurPage
  End If
End If

Exit Sub
fout:
MsgBox Err & " " & Error$, 16
Exit Sub
End Sub
Private Sub wzbRetreat()
On Error GoTo fout
If (curPage > wzcMinPage()) Then
  If (wzbExitPage(curPage, -1)) Then
    Dim prvPage As Integer
    prvPage = curPage
    curPage = curPage - 1
    
    'Unload current page.
    Me.subfrm.SourceObject = "WIZ_UNBOUND"
    
    wzcPostPageUnload (prvPage)
    
    wzcHandleMove prvPage, curPage
    
    wzbDisplayCurPage
  End If
End If

Exit Sub
fout:
MsgBox Err & " " & Error$, 16
Exit Sub
  
End Sub

Private Sub wzbDisplayCurPage()
On Error GoTo fout

wzcPrePageLoad (curPage)

Dim pageName As String
pageName = wzcGetPageName(curPage)

Me.subfrm.SourceObject = pageName

wzbFormatButtons

If curPage = wzcMinPage() Then
 If (Me.btnNxt.Enabled) Then
   Me.btnNxt.SetFocus
 ElseIf (Me.btnFin.Enabled) Then
   Me.btnFin.SetFocus
 End If
End If

If curPage = wzcMaxPage() Then
  If (Me.btnPrev.Enabled) Then
    Me.btnPrev.SetFocus
  ElseIf (Me.btnFin.Enabled) Then
    Me.btnFin.SetFocus
  End If
End If

wzcPostPageLoad (curPage)

Exit Sub
fout:
MsgBox Err & " " & Error$, 16
Exit Sub

End Sub


Private Function wzbExitPage(pageNr As Integer, direction As Integer) As Boolean
On Error Resume Next

wzbExitPage = wzcExitPage(pageNr, direction)

End Function

Private Function wzbFinish() As Boolean
On Error Resume Next
wzbFinish = False

If Not wzbExitPage(curPage, 1) Then Exit Function

If Not wzcFinish(curPage) Then Exit Function

Dim closedPage As Integer
closedPage = curPage

 'Unload current page.
Me.subfrm.SourceObject = "WIZ_UNBOUND"
curPage = -1
    
wzcPostPageUnload closedPage

'Notify that wizard is finished.
wzcPostFinish

wzbFinish = True



End Function


Private Sub Form_Resize()
On Error GoTo fout

Dim newDetlHeight As Long

newDetlHeight = Me.Form.InsideHeight - Me.FormFooter.Height - Me.FormHeader.Height
If (newDetlHeight > Me.Detail.Height) Then
  Me.Detail.Height = newDetlHeight
  Me.subfrm.Height = Me.Detail.Height
Else
'  Me.subfrm.Height = 0
  Me.subfrm.Height = newDetlHeight
  Me.Detail.Height = newDetlHeight
End If

Dim newDetlWidth As Long
newDetlWidth = Me.Form.InsideWidth
Me.subfrm.Width = newDetlWidth


Exit Sub
fout:
MsgBox Err & " " & Error$, 16
Exit Sub

End Sub